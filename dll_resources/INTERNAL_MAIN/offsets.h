namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto prefabID = 0x48;
		constexpr auto globalBroadcast = 0x4c;
		constexpr auto net = 0x50;
		constexpr auto IsDestroyedk__BackingField = 0x58;
		constexpr auto _prefabName = 0x60;
		constexpr auto _prefabNameWithoutExtension = 0x68;

		constexpr auto get_JustCreated = 0x2cfd30;
		constexpr auto set_JustCreated = 0x2cff20;
		constexpr auto ClientSpawn = 0x2ce4c0;
		constexpr auto ClientOnEnable = 0x2ce440;
		constexpr auto ClientInit = 0x2ce250;
		constexpr auto OnNetworkUpdate = 0x2cf810;
		constexpr auto PreNetworkUpdate = 0x2b1f00;
		constexpr auto PostNetworkUpdate = 0x2b1f00;
		constexpr auto ShouldDestroyWithGroup = 0x2c9390;
		constexpr auto ShouldDestroyImmediately = 0x2c7b60;
		constexpr auto NetworkDestroy = 0x2cf3a0;
		constexpr auto DoClientDestroy = 0x2ce890;
		constexpr auto DoNetworkDestroy = 0x2b1f00;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x2ce030;
		constexpr auto PostProcess = 0x2cf990;
		constexpr auto GetParentEntity = 0x2cecd0;
		constexpr auto HasParent = 0x2cece0;
		constexpr auto AddChild = 0x2cdfc0;
		constexpr auto RemoveChild = 0x2cfa10;
		constexpr auto get_gameManager = 0x2cfe50;
		constexpr auto get_prefabAttribute = 0x2cfeb0;
		constexpr auto get_IsDestroyed = 0x2cfd20;
		constexpr auto set_IsDestroyed = 0x2cff10;
		constexpr auto get_PrefabName = 0x2cfd40;
		constexpr auto get_ShortPrefabName = 0x2cfdc0;
		constexpr auto GetNetworkPosition = 0x2cec40;
		constexpr auto GetNetworkRotation = 0x2cec90;
		constexpr auto InvokeString = 0x2cecf0;
		constexpr auto LookupPrefab = 0x2cf300;
		constexpr auto EqualNetID = 0x2ceba0;
		constexpr auto ResetState = 0x2cfa70;
		constexpr auto InitShared = 0x2b1f00;
		constexpr auto PreInitShared = 0x2b1f00;
		constexpr auto PostInitShared = 0x2b1f00;
		constexpr auto DestroyShared = 0x2b1f00;
		constexpr auto OnNetworkGroupEnter = 0x2b1f00;
		constexpr auto OnNetworkGroupLeave = 0x2b1f00;
		constexpr auto OnNetworkGroupChange = 0x2cf6d0;
		constexpr auto OnNetworkSubscribersEnter = 0x2b1f00;
		constexpr auto OnNetworkSubscribersLeave = 0x2b1f00;
		constexpr auto EntityDestroy = 0x2ceab0;
		constexpr auto DoEntityDestroy = 0x2ce950;
		constexpr auto SpawnShared = 0x2cfac0;
		constexpr auto Load = 0x2cef40;
		constexpr auto get_isServer = 0x2c7b60;
		constexpr auto get_isClient = 0x2c9390;
		constexpr auto OnRpcMessage = 0x2c7b60;
		constexpr auto ctor = 0x2cfc80;
		constexpr auto cctor = 0x2cfbd0;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x208;
		constexpr auto __menuOption_Drink = 0x260;
		constexpr auto __menuOption_InviteToTeam = 0x2b8;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x310;
		constexpr auto __menuOption_Menu_LootPlayer = 0x368;
		constexpr auto __menuOption_Promote = 0x3c0;
		constexpr auto __menuOption_SaltWater = 0x418;
		constexpr auto currentViewMode = 0x470;
		constexpr auto selectedViewMode = 0x474;
		constexpr auto lastRevivePoint = 0x478;
		constexpr auto lastReviveDirection = 0x484;
		constexpr auto playerModel = 0x490;
		constexpr auto Frozen = 0x498;
		constexpr auto voiceRecorder = 0x4a0;
		constexpr auto voiceSpeaker = 0x4a8;
		constexpr auto _lookingAt = 0x4b0;
		constexpr auto _lookingAtEntity = 0x4b8;
		constexpr auto _lookingAtCollider = 0x4c0;
		constexpr auto lookingAtPointk__BackingField = 0x4c8;
		constexpr auto wakeTime = 0x4d4;
		constexpr auto needsClothesRebuild = 0x4d8;
		constexpr auto wasSleeping = 0x4d9;
		constexpr auto wokeUpBefore = 0x4da;
		constexpr auto lastClothesHash = 0x4dc;
		constexpr auto visiblePlayerList = 0x8;
		constexpr auto craftMode = 0x10;
		constexpr auto timeSinceUpdatedLookingAt = 0x4e0;
		constexpr auto nextTopologyTestTime = 0x4e4;
		constexpr auto usePressTime = 0x4e8;
		constexpr auto useHeldTime = 0x4ec;
		constexpr auto lookingAtTest = 0x4f0;
		constexpr auto lastDeathTimeClient = 0x14;
		constexpr auto currentTeam = 0x4f8;
		constexpr auto clientTeam = 0x500;
		constexpr auto lastReceivedTeamTime = 0x508;
		constexpr auto lastPresenceTeamId = 0x510;
		constexpr auto lastPresenceTeamSize = 0x518;
		constexpr auto playerGroupKey = 0x520;
		constexpr auto playerGroupSizeKey = 0x528;
		constexpr auto clActiveItem = 0x530;
		constexpr auto ClientCurrentMapNote = 0x538;
		constexpr auto ClientCurrentDeathNote = 0x540;
		constexpr auto modelState = 0x578;
		constexpr auto mounted = 0x550;
		constexpr auto nextSeatSwapTime = 0x560;
		constexpr auto cachedBuildingPrivilegeTime = 0x564;
		constexpr auto cachedBuildingPrivilege = 0x568;
		constexpr auto maxProjectileID = 0x570;
		constexpr auto lastUpdateTime = 0x574;
		constexpr auto cachedThreatLevel = 0x578;
		constexpr auto serverTickRate = 0x57c;
		constexpr auto clientTickRate = 0x580;
		constexpr auto serverTickInterval = 0x584;
		constexpr auto clientTickInterval = 0x588;
		constexpr auto lastSentTickTime = 0x58c;
		constexpr auto lastSentTick = 0x590;
		constexpr auto nextVisThink = 0x598;
		constexpr auto lastTimeSeen = 0x59c;
		constexpr auto debugPrevVisible = 0x5a0;
		constexpr auto fallDamageEffect = 0x5a8;
		constexpr auto drownEffect = 0x5b0;
		constexpr auto playerFlags = 0x5b8;
		constexpr auto eyes = 0x5c0;
		constexpr auto inventory = 0x5c8;
		constexpr auto blueprints = 0x5d0;
		constexpr auto metabolism = 0x5d8;
		constexpr auto input = 0x5e0;
		constexpr auto movement = 0x5e8;
		constexpr auto collision = 0x5f0;
		constexpr auto Belt = 0x5f8;
		constexpr auto triggerCollider = 0x600;
		constexpr auto physicsRigidbody = 0x608;
		constexpr auto userID = 0x610;
		constexpr auto UserIDString = 0x618;
		constexpr auto _displayName = 0x620;
		constexpr auto _lastSetName = 0x628;
		constexpr auto cachedProtection = 0x630;
		constexpr auto oldCameraFix = 0x18;
		constexpr auto lastHeadshotSoundTime = 0x638;
		constexpr auto clothingBlocksAiming = 0x63c;
		constexpr auto clothingMoveSpeedReduction = 0x640;
		constexpr auto clothingWaterSpeedBonus = 0x644;
		constexpr auto clothingAccuracyBonus = 0x648;
		constexpr auto equippingBlocked = 0x64c;
		constexpr auto eggVision = 0x650;

		constexpr auto GetMenuOptions = 0x2dd2b0;
		constexpr auto get_HasMenuOptions = 0x2efc70;
		constexpr auto OnRpcMessage = 0x2e2cc0;
		constexpr auto HandleCCTVRenderRequest = 0x2deb90;
		constexpr auto SetPlayerModelVisible = 0x2eb9a0;
		constexpr auto CanBeLooted = 0x2d5200;
		constexpr auto Menu_LootPlayer = 0x2e23c0;
		constexpr auto Menu_LootPlayer_ShowIf = 0x2e23a0;
		constexpr auto RPC_OpenLootPanel = 0x2e9e50;
		constexpr auto PlayOpenSound = 0x2e8ef0;
		constexpr auto InFirstPersonMode = 0x2df800;
		constexpr auto UpdateViewMode = 0x2ee9b0;
		constexpr auto get_idealViewMode = 0x2f0200;
		constexpr auto get_shouldDrawBody = 0x2f05c0;
		constexpr auto OnViewModeChanged = 0x2e8a90;
		constexpr auto ModifyCamera = 0x2e2430;
		constexpr auto Menu_AssistPlayer = 0x2e2360;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x2e2320;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x2e20b0;
		constexpr auto get_lookingAt = 0x2f0530;
		constexpr auto set_lookingAt = 0x2f0850;
		constexpr auto get_lookingAtEntity = 0x2f0480;
		constexpr auto set_lookingAtEntity = 0x2f0820;
		constexpr auto get_lookingAtCollider = 0x2f03f0;
		constexpr auto set_lookingAtCollider = 0x2f0810;
		constexpr auto get_lookingAtPoint = 0x2f0510;
		constexpr auto set_lookingAtPoint = 0x2f0830;
		constexpr auto GetExtrapolationTime = 0x2dc850;
		constexpr auto GetLocalVelocityClient = 0x2dd100;
		constexpr auto ClientInit = 0x2d66f0;
		constexpr auto CreatePlayerModel = 0x2da310;
		constexpr auto CreatePlayerCollision = 0x2da120;
		constexpr auto CreatePlayerMovement = 0x2da820;
		constexpr auto InitLocalPlayer = 0x2df830;
		constexpr auto InitRemotePlayer = 0x2dfa80;
		constexpr auto HasLocalControls = 0x2df030;
		constexpr auto SetNetworkPosition = 0x2eb840;
		constexpr auto SetNetworkRotation = 0x2eb8e0;
		constexpr auto DoClientDestroy = 0x2dac00;
		constexpr auto PostNetworkUpdate = 0x2e9560;
		constexpr auto OnFirstWakeUp = 0x2e28a0;
		constexpr auto get_TimeAwake = 0x2f0040;
		constexpr auto CL_ClothingChanged = 0x2d4c20;
		constexpr auto RebuildWorldModel = 0x2ea2f0;
		constexpr auto SetDefaultFootstepEffects = 0x2eb530;
		constexpr auto OnSignal = 0x2e8670;
		constexpr auto FindBone = 0x2db590;
		constexpr auto GetBones = 0x2dbd60;
		constexpr auto ShouldLerp = 0x2ebdc0;
		constexpr auto get_VisiblePlayerList = 0x2f00a0;
		constexpr auto ClearVisibility = 0x2d6240;
		constexpr auto RegisterForVisibility = 0x2ea640;
		constexpr auto UnregisterFromVisibility = 0x2ec1e0;
		constexpr auto FindByID_Clientside = 0x2db690;
		constexpr auto Find_Clientside = 0x2db720;
		constexpr auto GetRandomFloatBasedOnUserID = 0x2de6c0;
		constexpr auto DisplayHealthInfo = 0x2c7b60;
		constexpr auto ShouldDestroyWithGroup = 0x2ebd90;
		constexpr auto SetInheritedVelocity = 0x2eb6b0;
		constexpr auto GetPerformanceReport = 0x2de5b0;
		constexpr auto OnBecameRagdoll = 0x2e27a0;
		constexpr auto OnVoiceData = 0x2e8ec0;
		constexpr auto RecieveAchievement = 0x2ea5f0;
		constexpr auto CraftMode = 0x2d9eb0;
		constexpr auto ClientOnEnable = 0x2d70f0;
		constexpr auto UpdateClothesIfNeeded = 0x2ec330;
		constexpr auto MakeVisible = 0x2e1e80;
		constexpr auto ClientUpdate_Sleeping = 0x2d8100;
		constexpr auto ClientUpdate = 0x2d8490;
		constexpr auto RebuildClothingItems = 0x2ea0d0;
		constexpr auto UpdateClothingItems = 0x2ec790;
		constexpr auto UpdateHolsterOffsets = 0x2eceb0;
		constexpr auto PostLateClientCycle = 0x2e94c0;
		constexpr auto IsLocalPlayer = 0x2e0c60;
		constexpr auto ClientUpdateLocalPlayer = 0x2d7250;
		constexpr auto UpdateTopologyStats = 0x2ee850;
		constexpr auto ClientTick = 0x2d71a0;
		constexpr auto DoMovement = 0x2daef0;
		constexpr auto MountableOverrideViewAngles = 0x2e2520;
		constexpr auto BlockSprint = 0x2d4180;
		constexpr auto BlockJump = 0x2d40e0;
		constexpr auto ClientInput = 0x2d6b10;
		constexpr auto UseAction = 0x2eeaf0;
		constexpr auto GetInteractionEntity = 0x2dcde0;
		constexpr auto QuickUse = 0x2e9cb0;
		constexpr auto LongUse = 0x2e1dc0;
		constexpr auto UseStop = 0x2eedc0;
		constexpr auto UpdateLookingAt = 0x2ed040;
		constexpr auto CheckLookingAtVisible = 0x2d5ab0;
		constexpr auto OnDied = 0x2e27d0;
		constexpr auto OnRespawnInformation = 0x2e2bf0;
		constexpr auto OnLand = 0x2e29e0;
		constexpr auto StartLoading = 0x2ebe40;
		constexpr auto FinishLoading = 0x2db9b0;
		constexpr auto FinishedLoadingRoutine = 0x2dba30;
		constexpr auto DirectionalDamage = 0x2dab00;
		constexpr auto UnlockedBlueprint = 0x2ec170;
		constexpr auto CheckForRespawnInfo = 0x2d5a40;
		constexpr auto UpdateRichPresenceState = 0x2ee580;
		constexpr auto HandleCompanionPairingResult = 0x2def90;
		constexpr auto GetWaterDrinkingPoint = 0x2de930;
		constexpr auto Drink = 0x2db1a0;
		constexpr auto Drink_ShowIf = 0x2db000;
		constexpr auto SaltWater = 0x2b1f00;
		constexpr auto SaltWater_ShowIf = 0x2ea730;
		constexpr auto Climb = 0x2d9830;
		constexpr auto Climb_ShowIf = 0x2d95a0;
		constexpr auto HasPlayerFlag = 0x2df090;
		constexpr auto get_IsReceivingSnapshot = 0x2f0030;
		constexpr auto get_IsAdmin = 0x2effd0;
		constexpr auto get_IsDeveloper = 0x2f0000;
		constexpr auto get_IsAiming = 0x2effe0;
		constexpr auto get_IsFlying = 0x2f0010;
		constexpr auto get_IsConnected = 0x2efff0;
		constexpr auto get_clientTeamLifetime = 0x2f0110;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x2d4800;
		constexpr auto UpdateSteamGroup = 0x2ee670;
		constexpr auto ClearSteamGroup = 0x2d6160;
		constexpr auto CLIENT_ClearTeam = 0x2d4220;
		constexpr auto CLIENT_PendingInvite = 0x2d4400;
		constexpr auto InviteToTeam = 0x2dfc10;
		constexpr auto Promote = 0x2e9b40;
		constexpr auto Menu_Promote_Start = 0x2b1f00;
		constexpr auto Promote_ShowIf = 0x2e9790;
		constexpr auto LocalPlayerIsLeader = 0x2e18d0;
		constexpr auto Invite_ShowIf = 0x2dfee0;
		constexpr auto GetHeldEntity = 0x2dc940;
		constexpr auto GetHeldItem = 0x2dcb70;
		constexpr auto GetHeldItemID = 0x2dcb20;
		constexpr auto HeldEntityViewAngles = 0x2df5e0;
		constexpr auto HeldEntityFrame = 0x2df170;
		constexpr auto HeldEntityInput = 0x2df340;
		constexpr auto HeldItemUse = 0x2df700;
		constexpr auto HeldEntityStart = 0x2df510;
		constexpr auto HeldEntityEnd = 0x2df0a0;
		constexpr auto MapInfoOnEnable = 0x2e1f30;
		constexpr auto Client_ReceiveMarkers = 0x2d9130;
		constexpr auto Client_UpdateDeathMarker = 0x2d9470;
		constexpr auto Client_AddNewDeathMarker = 0x2d8ff0;
		constexpr auto AddPointOfInterest = 0x2d3410;
		constexpr auto ClearAllPointsOfInterest = 0x2d6030;
		constexpr auto ClearAllMapMarkers = 0x2d5ed0;
		constexpr auto OnModelState = 0x2e2b30;
		constexpr auto OnModelStateChanged = 0x2e2a90;
		constexpr auto get_isMounted = 0x2f0320;
		constexpr auto get_isMountingHidingWeapon = 0x2f0340;
		constexpr auto GetMounted = 0x2de3f0;
		constexpr auto GetMountedVehicle = 0x2de2f0;
		constexpr auto MarkSwapSeat = 0x2e1f80;
		constexpr auto SwapSeatCooldown = 0x2ebec0;
		constexpr auto ClientUpdateMounted = 0x2d7ee0;
		constexpr auto IsSleeping = 0x2e0ed0;
		constexpr auto IsSpectating = 0x2e0ee0;
		constexpr auto IsRelaxed = 0x2e0df0;
		constexpr auto IsServerFalling = 0x2e0ec0;
		constexpr auto GetBuildingPrivilege = 0x2dc170;
		constexpr auto CanBuild = 0x2d54d0;
		constexpr auto IsBuildingBlocked = 0x2e0930;
		constexpr auto IsBuildingAuthed = 0x2e04f0;
		constexpr auto CanPlaceBuildingPrivilege = 0x2d55c0;
		constexpr auto NewProjectileID = 0x2e25b0;
		constexpr auto NewProjectileSeed = 0x2e25c0;
		constexpr auto SendProjectileAttack = 0x2eb280;
		constexpr auto SendProjectileRicochet = 0x2eb2d0;
		constexpr auto SendProjectileUpdate = 0x2eb320;
		constexpr auto Load = 0x2e1550;
		constexpr auto GetThreatLevel = 0x2de910;
		constexpr auto EnsureUpdated = 0x2db300;
		constexpr auto SetHostileLength = 0x2eb600;
		constexpr auto SetWeaponDrawnDuration = 0x2ebcf0;
		constexpr auto ModifyInputState = 0x2b1f00;
		constexpr auto ForcePositionToParentOffset = 0x2dbaa0;
		constexpr auto UpdateClientTickRate = 0x2ec2d0;
		constexpr auto ForcePositionTo = 0x2dbbd0;
		constexpr auto SendVoiceData = 0x2eb370;
		constexpr auto SendClientTick = 0x2eab60;
		constexpr auto UpdatePlayerVisibilities = 0x2ee280;
		constexpr auto TimeSinceSeen = 0x2ebef0;
		constexpr auto SetNextVisThink = 0x2eb970;
		constexpr auto WantsVisUpdate = 0x2ef900;
		constexpr auto IsAimingAt = 0x2e0120;
		constexpr auto UpdateCullingSpheres = 0x2ecbf0;
		constexpr auto VisUpdateUsingCulling = 0x2eef40;
		constexpr auto VisUpdateUsingRays = 0x2ef050;
		constexpr auto LogDebugCull = 0x2e1a80;
		constexpr auto OnVisibilityChanged = 0x2e8bc0;
		constexpr auto VisUpdate = 0x2ef470;
		constexpr auto VisPlayerArmed = 0x2eee80;
		constexpr auto AnyPartVisible = 0x2d34f0;
		constexpr auto CalcVisUpdateRate = 0x2d4e70;
		constexpr auto PointSeePoint = 0x2e91f0;
		constexpr auto IsWounded = 0x2e0f40;
		constexpr auto ToPlayer = 0x2ebf10;
		constexpr auto get_Connection = 0x2efc60;
		constexpr auto get_displayName = 0x2f0160;
		constexpr auto set_displayName = 0x2f06e0;
		constexpr auto IsGod = 0x2e0b90;
		constexpr auto GetNetworkRotation = 0x2de480;
		constexpr auto CanInteract = 0x2d5570;
		constexpr auto StartHealth = 0x2ebe20;
		constexpr auto StartMaxHealth = 0x2c6330;
		constexpr auto MaxHealth = 0x2c6330;
		constexpr auto MaxVelocity = 0x2e1fc0;
		constexpr auto GetInheritedProjectileVelocity = 0x2DCC60;
		constexpr auto GetInheritedThrowVelocity = 0x2dcd20;
		constexpr auto GetInheritedDropVelocity = 0x2dcba0;
		constexpr auto InitShared = 0x2dfac0;
		constexpr auto DestroyShared = 0x2daa80;
		constexpr auto InSafeZone = 0x2df820;
		constexpr auto LateClientCycle = 0x2e0f50;
		constexpr auto ClientCycle = 0x2d6400;
		constexpr auto GetBounds = 0x2dbdf0;
		constexpr auto GetCenter = 0x2dc220;
		constexpr auto GetOffset = 0x2de560;
		constexpr auto GetSize = 0x2de7c0;
		constexpr auto GetHeight = 0x2dc920;
		constexpr auto GetRadius = 0x2de6b0;
		constexpr auto GetJumpHeight = 0x2dd0f0;
		constexpr auto TriggerPoint = 0x2ebff0;
		constexpr auto MaxDeployDistance = 0x2e1fb0;
		constexpr auto ClientUpdatePersistantData = 0x2d80d0;
		constexpr auto GetMinSpeed = 0x2de2d0;
		constexpr auto GetMaxSpeed = 0x2dd290;
		constexpr auto GetSpeed = 0x2de820;
		constexpr auto OnAttacked = 0x2e25d0;
		constexpr auto UpdatePlayerCollider = 0x2edf70;
		constexpr auto UpdatePlayerRigidbody = 0x2ee070;
		constexpr auto IsEnsnared = 0x2e0aa0;
		constexpr auto IsAttacking = 0x2e02f0;
		constexpr auto CanAttack = 0x2d4fb0;
		constexpr auto OnLadder = 0x2e2950;
		constexpr auto IsSwimming = 0x2e0ef0;
		constexpr auto IsHeadUnderwater = 0x2e0c10;
		constexpr auto IsOnGround = 0x2e0d40;
		constexpr auto IsRunning = 0x2e0e00;
		constexpr auto IsDucked = 0x2e09e0;
		constexpr auto ChatMessage = 0x2d5850;
		constexpr auto ConsoleMessage = 0x2d9e00;
		constexpr auto PenetrationResistance = 0x2c6330;
		constexpr auto ScaleDamage = 0x2ea8d0;
		constexpr auto UpdateMoveSpeedFromClothing = 0x2edbc0;
		constexpr auto UpdateProtectionFromClothing = 0x2ee460;
		constexpr auto Categorize = 0x2d5820;
		constexpr auto ToString = 0x2ebf20;
		constexpr auto GetDebugStatus = 0x2dc4b0;
		constexpr auto GetItem = 0x2dd040;
		constexpr auto get_Traits = 0x2f0080;
		constexpr auto WaterFactor = 0x2ef920;
		constexpr auto ShouldInheritNetworkGroup = 0x2e0ee0;
		constexpr auto AnyPlayersVisibleToEntity = 0x2d3b30;
		constexpr auto ctor = 0x2efb60;
		constexpr auto cctor = 0x2efaa0;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Owner = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Groundedk__BackingField = 0x48;

		constexpr auto get_InheritedVelocity = 0x2cdef0;
		constexpr auto set_InheritedVelocity = 0x2cdf90;
		constexpr auto get_TargetMovement = 0x2cdf50;
		constexpr auto set_TargetMovement = 0x2cdfb0;
		constexpr auto get_Running = 0x2cdf40;
		constexpr auto set_Running = 0x2cdfa0;
		constexpr auto get_Ducking = 0x2cded0;
		constexpr auto set_Ducking = 0x2cdf70;
		constexpr auto get_Grounded = 0x2cdee0;
		constexpr auto set_Grounded = 0x2cdf80;
		constexpr auto get_IsRunning = 0x2cdf30;
		constexpr auto get_IsDucked = 0x2cdf10;
		constexpr auto get_IsGrounded = 0x2cdf20;
		constexpr auto CurrentVelocity = 0x2cdb10;
		constexpr auto CurrentMoveSpeed = 0x2cc2c0;
		constexpr auto GetCollider = 0x2cbe90;
		constexpr auto Init = 0x2cde20;
		constexpr auto BlockJump = 0x2b1f00;
		constexpr auto BlockSprint = 0x2b1f00;
		constexpr auto ClientInput = 0x2b1f00;
		constexpr auto DoFixedUpdate = 0x2b1f00;
		constexpr auto FrameUpdate = 0x2cdce0;
		constexpr auto TeleportTo = 0x2cde30;
		constexpr auto Push = 0x2b1f00;
		constexpr auto SetParent = 0x2b1f00;
		constexpr auto FixedUpdate = 0x2cdb80;
		constexpr auto ctor = 0x2cdec0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x260;
		constexpr auto damageScale = 0x264;
		constexpr auto distanceScale = 0x268;
		constexpr auto projectileVelocityScale = 0x26c;
		constexpr auto automatic = 0x270;
		constexpr auto usableByTurret = 0x271;
		constexpr auto turretDamageScale = 0x274;
		constexpr auto attackFX = 0x278;
		constexpr auto silencedAttack = 0x280;
		constexpr auto muzzleBrakeAttack = 0x288;
		constexpr auto MuzzlePoint = 0x290;
		constexpr auto reloadTime = 0x298;
		constexpr auto canUnloadAmmo = 0x29c;
		constexpr auto primaryMagazine = 0x2a0;
		constexpr auto fractionalReload = 0x2a8;
		constexpr auto reloadStartDuration = 0x2ac;
		constexpr auto reloadFractionDuration = 0x2b0;
		constexpr auto reloadEndDuration = 0x2b4;
		constexpr auto aimSway = 0x2b8;
		constexpr auto aimSwaySpeed = 0x2bc;
		constexpr auto recoil = 0x2c0;
		constexpr auto aimconeCurve = 0x2c8;
		constexpr auto aimCone = 0x2d0;
		constexpr auto hipAimCone = 0x2d4;
		constexpr auto aimconePenaltyPerShot = 0x2d8;
		constexpr auto aimConePenaltyMax = 0x2dc;
		constexpr auto aimconePenaltyRecoverTime = 0x2e0;
		constexpr auto aimconePenaltyRecoverDelay = 0x2e4;
		constexpr auto stancePenaltyScale = 0x2e8;
		constexpr auto hasADS = 0x2ec;
		constexpr auto noAimingWhileCycling = 0x2ed;
		constexpr auto manualCycle = 0x2ee;
		constexpr auto needsCycle = 0x2ef;
		constexpr auto isCycling = 0x2f0;
		constexpr auto aiming = 0x2f1;
		constexpr auto resetDuration = 0x2f4;
		constexpr auto numShotsFired = 0x2f8;
		constexpr auto nextReloadTime = 0x2fc;
		constexpr auto startReloadTime = 0x300;
		constexpr auto stancePenalty = 0x304;
		constexpr auto aimconePenalty = 0x308;
		constexpr auto isReloading = 0x30c;
		constexpr auto swaySampleTime = 0x310;
		constexpr auto lastShotTime = 0x314;
		constexpr auto reloadPressTime = 0x318;
		constexpr auto ammoTypePreReload = 0x320;
		constexpr auto fractionalReloadDesiredCount = 0x328;
		constexpr auto fractionalReloadNumAdded = 0x32c;
		constexpr auto triggerReady = 0x330;
		constexpr auto createdProjectiles = 0x338;

		constexpr auto OnRpcMessage = 0x3d80e0;
		constexpr auto GetInheritedVelocity = 0x3d57b0;
		constexpr auto GetDamageScale = 0x3d5790;
		constexpr auto GetDistanceScale = 0x3d57a0;
		constexpr auto GetProjectileVelocityScale = 0x3d5f90;
		constexpr auto StartReloadCooldown = 0x3d9690;
		constexpr auto ResetReloadCooldown = 0x3d8b40;
		constexpr auto HasReloadCooldown = 0x3d66b0;
		constexpr auto GetReloadCooldown = 0x3d5fb0;
		constexpr auto GetReloadIdle = 0x3d6110;
		constexpr auto OnDrawGizmos = 0x3d7920;
		constexpr auto GetRecoil = 0x3d5fa0;
		constexpr auto get_isSemiAuto = 0x3d99f0;
		constexpr auto GetAimCone = 0x3d4ef0;
		constexpr auto ScaleRepeatDelay = 0x3d8b50;
		constexpr auto GetProjectileModifier = 0x3d5950;
		constexpr auto DidAttackClientside = 0x3D3760;
		constexpr auto GetItemOptions = 0x3d5800;
		constexpr auto EditViewAngles = 0x3d4580;
		constexpr auto OnFrame = 0x3d7cf0;
		constexpr auto ShotFired = 0x3d8e80;
		constexpr auto SimulateAimcone = 0x3d8ee0;
		constexpr auto CanAttack = 0x3d3290;
		constexpr auto CanAim = 0x3d3260;
		constexpr auto OnInput = 0x3d7d00;
		constexpr auto ReadyToAim = 0x3d8a90;
		constexpr auto ReadyToFire = 0x3d8ae0;
		constexpr auto AmmoTypeClicked = 0x3d3140;
		constexpr auto AddAmmoOption = 0x3d2f90;
		constexpr auto GetReloadMenu = 0x3d6190;
		constexpr auto PredictAmmoType = 0x3d8860;
		constexpr auto HasMoreThanOneAmmoType = 0x3d6400;
		constexpr auto OnDeploy = 0x3d78e0;
		constexpr auto DoReload = 0x3d4020;
		constexpr auto InsertAmmoFraction = 0x3d66e0;
		constexpr auto CancelFractionalReloading = 0x3d32b0;
		constexpr auto ClientFinishFractionalReload = 0x3d3350;
		constexpr auto ClientSingleReload = 0x3d3490;
		constexpr auto DoAttack = 0x3d3770;
		constexpr auto BeginCycle = 0x3d31d0;
		constexpr auto LaunchProjectile = 0x3d76f0;
		constexpr auto DryFire = 0x3d44d0;
		constexpr auto GetReloadDuration = 0x3d6030;
		constexpr auto GetAvailableAmmo = 0x3d5580;
		constexpr auto IsSilenced = 0x3d6740;
		constexpr auto OnSignal = 0x3d81d0;
		constexpr auto LaunchProjectileClientside = 0x3d6920;
		constexpr auto CreateProjectile = 0x2C9600;
		constexpr auto UpdateAmmoDisplay = 0x3D96E0;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x2c7b60;
		constexpr auto Load = 0x3d7840;
		constexpr auto ctor = 0x3d9790;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x50;
		constexpr auto highFrictionMaterial = 0x58;
		constexpr auto capsuleHeight = 0x60;
		constexpr auto capsuleCenter = 0x64;
		constexpr auto capsuleHeightDucked = 0x68;
		constexpr auto capsuleCenterDucked = 0x6c;
		constexpr auto gravityTestRadius = 0x70;
		constexpr auto gravityMultiplier = 0x74;
		constexpr auto gravityMultiplierSwimming = 0x78;
		constexpr auto maxAngleWalking = 0x7c;
		constexpr auto maxAngleClimbing = 0x80;
		constexpr auto maxAngleSliding = 0x84;
		constexpr auto maxStepHeight = 0x88;
		constexpr auto body = 0x90;
		constexpr auto capsule = 0x98;
		constexpr auto ladder = 0xa0;
		constexpr auto maxVelocity = 0xa8;
		constexpr auto groundAngle = 0xac;
		constexpr auto groundAngleNew = 0xb0;
		constexpr auto groundTime = 0xb4;
		constexpr auto jumpTime = 0xb8;
		constexpr auto landTime = 0xbc;
		constexpr auto previousPosition = 0xc0;
		constexpr auto previousVelocity = 0xcc;
		constexpr auto previousInheritedVelocity = 0xd8;
		constexpr auto groundNormal = 0xe4;
		constexpr auto groundNormalNew = 0xf0;
		constexpr auto groundVelocity = 0xfc;
		constexpr auto groundVelocityNew = 0x108;
		constexpr auto nextSprintTime = 0x114;
		constexpr auto lastSprintTime = 0x118;
		constexpr auto sprintForced = 0x11c;
		constexpr auto modify = 0x120;
		constexpr auto grounded = 0x124;
		constexpr auto wasGrounded = 0x125;
		constexpr auto climbing = 0x126;
		constexpr auto wasClimbing = 0x127;
		constexpr auto sliding = 0x128;
		constexpr auto wasSliding = 0x129;
		constexpr auto swimming = 0x12a;
		constexpr auto wasSwimming = 0x12b;
		constexpr auto jumping = 0x12c;
		constexpr auto wasJumping = 0x12d;
		constexpr auto falling = 0x12e;
		constexpr auto wasFalling = 0x12f;
		constexpr auto flying = 0x130;
		constexpr auto wasFlying = 0x131;
		constexpr auto forcedDuckDelta = 0x134;

		constexpr auto Awake = 0x4bbc60;
		constexpr auto GetCollider = 0x4bd960;
		constexpr auto OnDisable = 0x4c0ac0;
		constexpr auto Init = 0x4be250;
		constexpr auto OnCollisionEnter = 0x4c0900;
		constexpr auto OnCollisionStay = 0x4c09e0;
		constexpr auto GroundCheck = 0x4bdb00;
		constexpr auto TeleportTo = 0x4c1110;
		constexpr auto UpdateCurrentLadder = 0x4c1440;
		constexpr auto ClientInput = 0x4bbed0;
		constexpr auto Movement_Water = 0x4bfcd0;
		constexpr auto Movement_Mounted = 0x4bedc0;
		constexpr auto Movement_Ladder = 0x4be740;
		constexpr auto Movement_Noclip = 0x4beeb0;
		constexpr auto Movement_Walking = 0x4bf470;
		constexpr auto GetHeldEntityMovementMultiplier = 0x4bda50;
		constexpr auto HandleGrounded = 0x4be020;
		constexpr auto HandleRunning = 0x4be190;
		constexpr auto HandleDucking = 0x4bddd0;
		constexpr auto GetForcedDuck = 0x4bd970;
		constexpr auto HandleJumping = 0x4be070;
		constexpr auto CanJump = 0x4bbd60;
		constexpr auto BlockJump = 0x4bbcd0;
		constexpr auto BlockSprint = 0x4bbd10;
		constexpr auto SetKinematic = 0x4c0ee0;
		constexpr auto CanSprint = 0x4bbe60;
		constexpr auto Jump = 0x4be420;
		constexpr auto DoFixedUpdate = 0x4bc280;
		constexpr auto DoStepUp = 0x4bca90;
		constexpr auto UpdateVelocity = 0x4c1900;
		constexpr auto UpdateGravity = 0x4c15c0;
		constexpr auto FrameUpdate = 0x4bd4c0;
		constexpr auto TransformState = 0x4c1230;
		constexpr auto SetParent = 0x4c0f10;
		constexpr auto FallVelocity = 0x4bd410;
		constexpr auto CurrentVelocity = 0x4bc240;
		constexpr auto CurrentMoveSpeed = 0x4bc1f0;
		constexpr auto ctor = 0x4c2450;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x14EA790;
		constexpr auto set_color = 0x14D6950;
		constexpr auto get_backgroundColor = 0x14b3620;
		constexpr auto set_backgroundColor = 0x14b3c20;
		constexpr auto get_contentColor = 0x14b3830;
		constexpr auto set_contentColor = 0x14b3dc0;
		constexpr auto get_changed = 0x14b3700;
		constexpr auto set_changed = 0x14b3c90;
		constexpr auto get_enabled = 0x14b38b0;
		constexpr auto set_enabled = 0x14b3e30;
		constexpr auto get_usePageScrollbars = 0x14b3bb0;
		constexpr auto get_blendMaterial = 0x14b36a0;
		constexpr auto get_blitMaterial = 0x14b36d0;
		constexpr auto get_roundedRectMaterial = 0x14b39d0;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x14b3a00;
		constexpr auto GrabMouseControl = 0x14b1650;
		constexpr auto HasMouseControl = 0x14b2440;
		constexpr auto ReleaseMouseControl = 0x14b2b50;
		constexpr auto SetNextControlName = 0x14b2f00;
		constexpr auto InternalRepaintEditorWindow = 0x14b2760;
		constexpr auto cctor = 0x14b3360;
		constexpr auto get_scrollTroughSide = 0x14b3a30;
		constexpr auto set_scrollTroughSide = 0x14b3f90;
		constexpr auto get_nextScrollStepTime = 0x14b3970;
		constexpr auto set_nextScrollStepTime = 0x14b3ed0;
		constexpr auto set_skin = 0x14EB070;
		constexpr auto get_skin = 0x14D6790;
		constexpr auto DoSetSkin = 0x14afad0;
		constexpr auto get_matrix = 0x14b38e0;
		constexpr auto set_matrix = 0x14b3e70;
		constexpr auto Label = 0x14b2880;
		constexpr auto DrawTexture = 0x14E7C80;
		constexpr auto CalculateScaledTextureRects = 0x14ade20;
		constexpr auto Box = 0x14ad210;
		constexpr auto Button = 0x14ad2d0;
		constexpr auto PasswordFieldGetStrToShow = 0x14b2a20;
		constexpr auto DoTextField = 0x14aff50;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x14b1e80;
		constexpr auto HandleTextFieldEventForDesktop = 0x14b1690;
		constexpr auto Toggle = 0x14b31a0;
		constexpr auto SelectionGrid = 0x14b2c80;
		constexpr auto CalcTotalHorizSpacing = 0x14adc10;
		constexpr auto DoControl = 0x14af400;
		constexpr auto DoLabel = 0x14af840;
		constexpr auto DoToggle = 0x14b0110;
		constexpr auto DoButton = 0x14af2d0;
		constexpr auto DoButtonGrid = 0x14ae5e0;
		constexpr auto CalcMouseRects = 0x14ad6f0;
		constexpr auto HorizontalSlider = 0x14b2550;
		constexpr auto Slider = 0x14b2f40;
		constexpr auto BeginGroup = 0x14acbf0;
		constexpr auto EndGroup = 0x14b1610;
		constexpr auto get_scrollViewStates = 0x14b3af0;
		constexpr auto CallWindowDelegate = 0x14ae150;
		constexpr auto get_color_Injected = 0x14b3730;
		constexpr auto set_color_Injected = 0x14b3cd0;
		constexpr auto get_backgroundColor_Injected = 0x14b35e0;
		constexpr auto set_backgroundColor_Injected = 0x14b3be0;
		constexpr auto get_contentColor_Injected = 0x14b37f0;
		constexpr auto set_contentColor_Injected = 0x14b3d80;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x14aa700;
		constexpr auto set_rawName = 0x14aaad0;
		constexpr auto get_font = 0x14aa1f0;
		constexpr auto get_imagePosition = 0x14aa230;
		constexpr auto set_alignment = 0x14CD5B0;
		constexpr auto get_wordWrap = 0x14aa7c0;
		constexpr auto get_contentOffset = 0x14aa120;
		constexpr auto set_contentOffset = 0x14aaa00;
		constexpr auto get_fixedWidth = 0x14aa1b0;
		constexpr auto get_fixedHeight = 0x14aa170;
		constexpr auto get_stretchWidth = 0x14aa780;
		constexpr auto set_stretchWidth = 0x14aab70;
		constexpr auto get_stretchHeight = 0x14aa740;
		constexpr auto set_stretchHeight = 0x14aab20;
		constexpr auto set_fontSize = 0x14CD680;
		constexpr auto set_Internal_clipOffset = 0x14aa930;
		constexpr auto Internal_Create = 0x14a9530;
		constexpr auto Internal_Copy = 0x14a94e0;
		constexpr auto Internal_Destroy = 0x14a9570;
		constexpr auto GetStyleStatePtr = 0x14a9310;
		constexpr auto GetRectOffsetPtr = 0x14a92d0;
		constexpr auto Internal_GetLineHeight = 0x14a9c00;
		constexpr auto Internal_Draw = 0x14a9980;
		constexpr auto Internal_Draw2 = 0x14a9620;
		constexpr auto Internal_DrawCursor = 0x14a9700;
		constexpr auto Internal_DrawWithTextSelection = 0x14a9820;
		constexpr auto Internal_GetCursorPixelPosition = 0x14a9ab0;
		constexpr auto Internal_GetCursorStringIndex = 0x14a9ba0;
		constexpr auto Internal_GetSelectedRenderedText = 0x14a9cb0;
		constexpr auto Internal_CalcSize = 0x14a8220;
		constexpr auto Internal_CalcSizeWithConstraints = 0x14a81c0;
		constexpr auto Internal_CalcHeight = 0x14a80e0;
		constexpr auto Internal_CalcMinMaxWidth = 0x14a93b0;
		constexpr auto SetMouseTooltip = 0x14a9db0;
		constexpr auto Internal_GetCursorFlashOffset = 0x14a9a10;
		constexpr auto SetDefaultFont = 0x14a9d20;
		constexpr auto ctor = 0x14aa050;
		constexpr auto Finalize = 0x14a90f0;
		constexpr auto get_name = 0x14aa470;
		constexpr auto set_name = 0x14aaa80;
		constexpr auto get_normal = 0x14aa590;
		constexpr auto get_margin = 0x14aa3c0;
		constexpr auto get_padding = 0x14aa650;
		constexpr auto get_lineHeight = 0x14aa310;
		constexpr auto Draw = 0x14a8ec0;
		constexpr auto DrawCursor = 0x14a8280;
		constexpr auto DrawWithTextSelection = 0x14a8740;
		constexpr auto op_Implicit = 0x14aa800;
		constexpr auto get_none = 0x14aa4d0;
		constexpr auto GetCursorPixelPosition = 0x14a91f0;
		constexpr auto GetCursorStringIndex = 0x14a9270;
		constexpr auto CalcSize = 0x14a8220;
		constexpr auto CalcSizeWithConstraints = 0x14a81c0;
		constexpr auto CalcHeight = 0x14a80e0;
		constexpr auto get_isHeightDependantOnWidth = 0x14aa270;
		constexpr auto CalcMinMaxWidth = 0x14a8140;
		constexpr auto ToString = 0x14a9e30;
		constexpr auto cctor = 0x14a9f40;
		constexpr auto get_contentOffset_Injected = 0x14aa0d0;
		constexpr auto set_contentOffset_Injected = 0x14aa9b0;
		constexpr auto set_Internal_clipOffset_Injected = 0x14aa8e0;
		constexpr auto Internal_Draw_Injected = 0x14a98f0;
		constexpr auto Internal_Draw2_Injected = 0x14a95b0;
		constexpr auto Internal_DrawCursor_Injected = 0x14a9690;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x14a9770;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x14a9a40;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x14a9b30;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x14a9c40;
		constexpr auto Internal_CalcSize_Injected = 0x14a9480;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x14a9410;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x14a9350;
		constexpr auto SetMouseTooltip_Injected = 0x14a9d60;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1499f80;
		constexpr auto get_mousePosition = 0x1499eb0;
		constexpr auto set_mousePosition = 0x149a290;
		constexpr auto get_delta = 0x1499c30;
		constexpr auto get_pointerType = 0x1499f00;
		constexpr auto get_button = 0x1499a20;
		constexpr auto get_modifiers = 0x1499e20;
		constexpr auto set_modifiers = 0x149a200;
		constexpr auto get_pressure = 0x1499f40;
		constexpr auto get_clickCount = 0x1499aa0;
		constexpr auto get_character = 0x1499a60;
		constexpr auto set_character = 0x149a040;
		constexpr auto get_keyCode = 0x14D0E00;
		constexpr auto set_keyCode = 0x149a1c0;
		constexpr auto get_displayIndex = 0x1499c80;
		constexpr auto set_displayIndex = 0x149a180;
		constexpr auto get_type = 0x14D1020;
		constexpr auto set_type = 0x149a2d0;
		constexpr auto get_commandName = 0x1499ae0;
		constexpr auto set_commandName = 0x149a090;
		constexpr auto Internal_Use = 0x1497900;
		constexpr auto Internal_Create = 0x1497700;
		constexpr auto Internal_Destroy = 0x1497740;
		constexpr auto Internal_Copy = 0x14976c0;
		constexpr auto GetTypeForControl = 0x1497680;
		constexpr auto CopyFromPtr = 0x1497160;
		constexpr auto PopEvent = 0x1498bd0;
		constexpr auto Internal_SetNativeEvent = 0x14978c0;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1497780;
		constexpr auto ctor = 0x1499950;
		constexpr auto Finalize = 0x1497470;
		constexpr auto CopyFrom = 0x14971b0;
		constexpr auto get_shift = 0x1499fc0;
		constexpr auto get_control = 0x1499b60;
		constexpr auto get_alt = 0x14999e0;
		constexpr auto get_command = 0x1499b20;
		constexpr auto get_current = 0x14D0BC0;
		constexpr auto set_current = 0x149a0e0;
		constexpr auto get_isKey = 0x1499d30;
		constexpr auto get_isMouse = 0x1499d80;
		constexpr auto get_isDirectManipulationDevice = 0x1499cc0;
		constexpr auto KeyboardEvent = 0x1497940;
		constexpr auto GetHashCode = 0x1497550;
		constexpr auto Equals = 0x1497220;
		constexpr auto ToString = 0x1498c10;
		constexpr auto Use = 0x14996f0;
		constexpr auto get_mousePosition_Injected = 0x1499e60;
		constexpr auto set_mousePosition_Injected = 0x149a240;
		constexpr auto get_delta_Injected = 0x1499be0;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x1b1e440;
		constexpr auto GetKeyUpInt = 0x1b1e480;
		constexpr auto GetKeyDownInt = 0x1b1e400;
		constexpr auto GetAxis = 0x1b1e380;
		constexpr auto GetAxisRaw = 0x1b1e340;
		constexpr auto GetButtonDown = 0x1b1e3c0;
		constexpr auto GetMouseButton = 0x1b1e540;
		constexpr auto GetMouseButtonDown = 0x1b1e4c0;
		constexpr auto GetMouseButtonUp = 0x1b1e500;
		constexpr auto GetTouch = 0x1b1e5c0;
		constexpr auto GetKey = 0x1b1e440;
		constexpr auto GetKeyUp = 0x1b1e480;
		constexpr auto GetKeyDown = 0x1b1e400;
		constexpr auto get_anyKey = 0x1b1e650;
		constexpr auto get_anyKeyDown = 0x1b1e620;
		constexpr auto get_mousePosition = 0x1B5CC90;
		constexpr auto get_mouseScrollDelta = 0x1b1e850;
		constexpr auto get_imeCompositionMode = 0x1b1e730;
		constexpr auto set_imeCompositionMode = 0x1b1eaa0;
		constexpr auto get_compositionString = 0x1b1e700;
		constexpr auto get_compositionCursorPos = 0x1b1e6c0;
		constexpr auto set_compositionCursorPos = 0x1b1ea60;
		constexpr auto get_mousePresent = 0x1b1e7e0;
		constexpr auto get_touchCount = 0x1b1e890;
		constexpr auto get_touchSupported = 0x1b1e8c0;
		constexpr auto get_touches = 0x1b1e8f0;
		constexpr auto GetTouch_Injected = 0x1b1e580;
		constexpr auto get_mousePosition_Injected = 0x1b1e760;
		constexpr auto get_mouseScrollDelta_Injected = 0x1b1e810;
		constexpr auto get_compositionCursorPos_Injected = 0x1b1e680;
		constexpr auto set_compositionCursorPos_Injected = 0x1b1ea20;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x31d9e0;
		constexpr auto Capsule = 0x31d630;
		constexpr auto Sphere = 0x31EE80;
		constexpr auto SphereGizmo = 0x31ebd0;
		constexpr auto Line = 0x31DF50;
		constexpr auto Arrow = 0x31C810;
		constexpr auto ArrowPadded = 0x31c150;
		constexpr auto Bounds = 0x31ca40;
		constexpr auto Box = 0x31cf90;
		constexpr auto Text = 0x31f120;
		constexpr auto ScreenText = 0x31ea90;
		constexpr auto Awake = 0x31c9d0;
		constexpr auto OnPreRender = 0x31e700;
		constexpr auto OnPostRender = 0x31e3c0;
		constexpr auto OnGUI = 0x31e1f0;
		constexpr auto CreateLineMaterial = 0x31d880;
		constexpr auto get_skin = 0x31f2e0;
		constexpr auto ctor = 0x31f270;
		constexpr auto cctor = 0x2b1f00;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x1456a60;
		constexpr auto get_whiteTexture = 0x143E5E0;
		constexpr auto get_blackTexture = 0x1456a30;
		constexpr auto Compress = 0x1455400;
		constexpr auto Internal_CreateImpl = 0x1455a10;
		constexpr auto Internal_Create = 0x1455a70;
		constexpr auto get_isReadable = 0x1456aa0;
		constexpr auto ApplyImpl = 0x14552d0;
		constexpr auto ResizeImpl = 0x1455f40;
		constexpr auto SetPixelImpl = 0x1456280;
		constexpr auto GetPixelImpl = 0x1455670;
		constexpr auto GetPixelBilinearImpl = 0x14554b0;
		constexpr auto ResizeWithFormatImpl = 0x1455f90;
		constexpr auto ReadPixelsImpl = 0x1455d30;
		constexpr auto SetPixelsImpl = 0x1456480;
		constexpr auto LoadRawTextureDataImpl = 0x1455b40;
		constexpr auto SetAllPixels32 = 0x1456160;
		constexpr auto SetBlockOfPixels32 = 0x14561c0;
		constexpr auto GetPixels = 0x1455910;
		constexpr auto GetPixels32 = 0x1455810;
		constexpr auto ctor = 0x1456890;
		constexpr auto SetPixel = 0x14562f0;
		constexpr auto SetPixels = 0x14564e0;
		constexpr auto GetPixel = 0x14556f0;
		constexpr auto GetPixelBilinear = 0x1455530;
		constexpr auto LoadRawTextureData = 0x1455ba0;
		constexpr auto Apply = 0x1455350;
		constexpr auto Resize = 0x14560c0;
		constexpr auto ReadPixels = 0x1455e70;
		constexpr auto SetPixels32 = 0x1456160;
		constexpr auto SetPixelImpl_Injected = 0x1456220;
		constexpr auto GetPixelImpl_Injected = 0x1455610;
		constexpr auto GetPixelBilinearImpl_Injected = 0x1455450;
		constexpr auto ReadPixelsImpl_Injected = 0x1455cc0;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto HasFlag = 0x1771440;
		constexpr auto SetFlag = 0x1771ef0;
		constexpr auto get_ducked = 0x1771f70;
		constexpr auto set_ducked = 0x1772030;
		constexpr auto get_jumped = 0x1771f90;
		constexpr auto set_jumped = 0x1772070;
		constexpr auto get_onground = 0x1771fc0;
		constexpr auto set_onground = 0x17720d0;
		constexpr auto get_sleeping = 0x1771ff0;
		constexpr auto set_sleeping = 0x1772130;
		constexpr auto get_sprinting = 0x1772000;
		constexpr auto set_sprinting = 0x1772150;
		constexpr auto get_onLadder = 0x1771fb0;
		constexpr auto set_onLadder = 0x17720b0;
		constexpr auto get_flying = 0x1771f80;
		constexpr auto set_flying = 0x1772050;
		constexpr auto get_aiming = 0x1771f60;
		constexpr auto set_aiming = 0x1772010;
		constexpr auto get_prone = 0x1771fd0;
		constexpr auto set_prone = 0x17720f0;
		constexpr auto get_mounted = 0x1771fa0;
		constexpr auto set_mounted = 0x1772090;
		constexpr auto get_relaxed = 0x1771fe0;
		constexpr auto set_relaxed = 0x1772110;
		constexpr auto Equal = 0x17710e0;
		constexpr auto ResetToPool = 0x1771520;
		constexpr auto Dispose = 0x1771060;
		constexpr auto EnterPool = 0x1289510;
		constexpr auto LeavePool = 0x1289540;
		constexpr auto CopyTo = 0x176fd40;
		constexpr auto Copy = 0x176fd90;
		constexpr auto Deserialize = 0x1770de0;
		constexpr auto DeserializeLengthDelimited = 0x176fe30;
		constexpr auto DeserializeLength = 0x17704c0;
		constexpr auto FromProto = 0x17711f0;
		constexpr auto WriteToStream = 0x1771f20;
		constexpr auto WriteToStreamDelta = 0x1771f40;
		constexpr auto ReadFromStream = 0x1771450;
		constexpr auto SerializeDelta = 0x17715d0;
		constexpr auto Serialize = 0x1771c30;
		constexpr auto ToProtoBytes = 0x1771f10;
		constexpr auto ToProto = 0x1771f20;
		constexpr auto SerializeToBytes = 0x1771b20;
		constexpr auto SerializeLengthDelimited = 0x1771a70;
		constexpr auto ctor = 0xb1e9a0;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x17cc480;
		constexpr auto Dispose = 0x17cc120;
		constexpr auto EnterPool = 0x1289510;
		constexpr auto LeavePool = 0x1289540;
		constexpr auto CopyTo = 0x17cafb0;
		constexpr auto Copy = 0x17caff0;
		constexpr auto Deserialize = 0x17cb720;
		constexpr auto DeserializeLengthDelimited = 0x17cb090;
		constexpr auto DeserializeLength = 0x17cb690;
		constexpr auto FromProto = 0x17cc250;
		constexpr auto WriteToStream = 0x17cce90;
		constexpr auto WriteToStreamDelta = 0x17cceb0;
		constexpr auto ReadFromStream = 0x17cc460;
		constexpr auto SerializeDelta = 0x17cc5e0;
		constexpr auto Serialize = 0x17ccbf0;
		constexpr auto ToProtoBytes = 0x17cce80;
		constexpr auto ToProto = 0x17cce90;
		constexpr auto SerializeToBytes = 0x17ccae0;
		constexpr auto SerializeLengthDelimited = 0x17cca30;
		constexpr auto ctor = 0xb1e9a0;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x4d42e0;
		constexpr auto get_isAuthoritative = 0x4d90d0;
		constexpr auto get_isAlive = 0x4d9090;
		constexpr auto Retire = 0x4D7E00;
		constexpr auto Cleanup = 0x4d4830;
		constexpr auto AdjustVelocity = 0x4d4070;
		constexpr auto InitializeVelocity = 0x4d7090;
		constexpr auto OnDisable = 0x4d72b0;
		constexpr auto Update = 0x4d8c70;
		constexpr auto SetEffectScale = 0x4d83d0;
		constexpr auto DoFlybySound = 0x4d4a30;
		constexpr auto CalculateEffectScale = 0x4d4790;
		constexpr auto UpdateVelocity = 0x4d8990;
		constexpr auto DoVelocityUpdate = 0x4d68a0;
		constexpr auto DoMovement = 0x4d5760;
		constexpr auto DoWaterHit = 0x4d6c80;
		constexpr auto DoRicochet = 0x4d6480;
		constexpr auto DoHit = 0x4D5040;
		constexpr auto Reflect = 0x4d7580;
		constexpr auto Refract = 0x4d78d0;
		constexpr auto RandomRotation = 0x4d7480;
		constexpr auto Launch = 0x4D7220;
		constexpr auto FleshMaterialID = 0x4d6f90;
		constexpr auto WaterMaterialID = 0x4d8df0;
		constexpr auto IsWaterMaterial = 0x4d70f0;
		constexpr auto ShouldStopProjectile = 0x4d88d0;
		constexpr auto ctor = 0x4d8ef0;
		constexpr auto cctor = 0x2b1f00;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0x7700e0;
		constexpr auto get_worldStandingPosition = 0x7702d0;
		constexpr auto get_worldCrouchedPosition = 0x76ffe0;
		constexpr auto get_position = 0x76fbe0;
		constexpr auto get_BodyLeanOffset = 0x76f1d0;
		constexpr auto get_center = 0x76f600;
		constexpr auto get_offset = 0x76f920;
		constexpr auto get_rotation = 0x76ff30;
		constexpr auto set_rotation = 0x770430;
		constexpr auto get_bodyRotation = 0x76f540;
		constexpr auto set_bodyRotation = 0x770400;
		constexpr auto get_headAngles = 0x76f900;
		constexpr auto set_headAngles = 0x770410;
		constexpr auto get_rotationLook = 0x76ff20;
		constexpr auto set_rotationLook = 0x770420;
		constexpr auto get_parentRotation = 0x76fa50;
		constexpr auto get_canUpdateViewAngles = 0x76f550;
		constexpr auto get_IsAltLookingLegsThreshold = 0x76f530;
		constexpr auto set_IsAltLookingLegsThreshold = 0x7703f0;
		constexpr auto FrameUpdate = 0x76df20;
		constexpr auto UpdateCamera = 0x76eee0;
		constexpr auto DoFirstPersonCamera = 0x76c780;
		constexpr auto DoInEyeCamera = 0x76ca40;
		constexpr auto DoThirdPersonCamera = 0x76ccc0;
		constexpr auto ApplyCameraMoves = 0x76c150;
		constexpr auto MovementForward = 0x76eb60;
		constexpr auto MovementRight = 0x76ed20;
		constexpr auto BodyRay = 0x76c330;
		constexpr auto BodyForward = 0x76C9A0;
		constexpr auto BodyRight = 0x76c4e0;
		constexpr auto BodyUp = 0x76c630;
		constexpr auto HeadRay = 0x76e720;
		constexpr auto HeadForward = 0x76e630;
		constexpr auto HeadRight = 0x76e980;
		constexpr auto HeadUp = 0x76ea70;
		constexpr auto GetLookRotation = 0x76e4b0;
		constexpr auto GetAimRotation = 0x76e3f0;
		constexpr auto ctor = 0x76f110;
		constexpr auto cctor = 0x76f050;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x7d7440;
		constexpr auto OnDisable = 0x7d7790;
		constexpr auto Holster = 0x7d7720;
		constexpr auto Clear = 0x7d72d0;
		constexpr auto OnFrame = 0x7d7800;
		constexpr auto Play = 0x7D80A0;
		constexpr auto ResetTrigger = 0x7d7970;
		constexpr auto Trigger = 0x7d7b40;
		constexpr auto CrossFade = 0x7d73a0;
		constexpr auto SetBool = 0x7d7a00;
		constexpr auto SetFloat = 0x7d7aa0;
		constexpr auto set_ironSights = 0x7d7bd0;
		constexpr auto ctor = 0x26b430;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x340;
		constexpr auto arrowBack = 0x344;
		constexpr auto swapArrows = 0x348;
		constexpr auto wasAiming = 0x350;

		constexpr auto OnRpcMessage = 0x4f7bd0;
		constexpr auto ClientInit = 0x4f7330;
		constexpr auto OnSignal = 0x4f7cc0;
		constexpr auto UpdatePullbackThink = 0x4f8080;
		constexpr auto CancelPullbackThink = 0x4f72c0;
		constexpr auto PullbackThink = 0x4f7f40;
		constexpr auto OnInput = 0x4f7850;
		constexpr auto OnHolstered = 0x4f7810;
		constexpr auto DoAttack = 0x4f73a0;
		constexpr auto IsAiming = 0x4f7640;
		constexpr auto OnViewmodelEvent = 0x4f7e30;
		constexpr auto OnFrame = 0x4f76e0;
		constexpr auto PostNetworkUpdate = 0x4f7ea0;
		constexpr auto TryReload = 0x575040;
		constexpr auto ctor = 0x2c8110;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1d8;
		constexpr auto repeatDelay = 0x1dc;
		constexpr auto animationDelay = 0x1e0;
		constexpr auto effectiveRange = 0x1e4;
		constexpr auto npcDamageScale = 0x1e8;
		constexpr auto attackLengthMin = 0x1ec;
		constexpr auto attackLengthMax = 0x1f0;
		constexpr auto attackSpacing = 0x1f4;
		constexpr auto aiAimSwayOffset = 0x1f8;
		constexpr auto aiAimCone = 0x1fc;
		constexpr auto aiOnlyInRange = 0x200;
		constexpr auto effectiveRangeType = 0x201;
		constexpr auto CloseRangeAddition = 0x204;
		constexpr auto MediumRangeAddition = 0x208;
		constexpr auto LongRangeAddition = 0x20c;
		constexpr auto CanUseAtMediumRange = 0x210;
		constexpr auto CanUseAtLongRange = 0x211;
		constexpr auto reloadSounds = 0x218;
		constexpr auto thirdPersonMeleeSound = 0x220;
		constexpr auto recoilCompDelayOverride = 0x228;
		constexpr auto wantsRecoilComp = 0x22c;
		constexpr auto nextAttackTime = 0x230;
		constexpr auto lastTickTime = 0x234;
		constexpr auto nextTickTime = 0x238;
		constexpr auto timeSinceDeploy = 0x23c;
		constexpr auto lastRecoilCompTime = 0x240;
		constexpr auto startAimingDirection = 0x244;
		constexpr auto wasDoingRecoilComp = 0x250;
		constexpr auto reductionSpeed = 0x254;

		constexpr auto GetInheritedVelocity = 0x346070;
		constexpr auto get_NextAttackTime = 0x346520;
		constexpr auto GetAttackStats = 0x2b1f00;
		constexpr auto StartAttackCooldown = 0x346290;
		constexpr auto ResetAttackCooldown = 0x346280;
		constexpr auto HasAttackCooldown = 0x3460e0;
		constexpr auto GetAttackCooldown = 0x345f70;
		constexpr auto GetAttackIdle = 0x345ff0;
		constexpr auto CalculateCooldownTime = 0x345520;
		constexpr auto IsFullyDeployed = 0x346110;
		constexpr auto ProcessInputTime = 0x3461b0;
		constexpr auto OnInput = 0x346150;
		constexpr auto OnDeploy = 0x346130;
		constexpr auto RecoilCompReady = 0x346200;
		constexpr auto AddPunch = 0x345370;
		constexpr auto DoRecoilCompensation = 0x345660;
		constexpr auto ctor = 0x346430;
		constexpr auto cctor = 0x3463c0;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x70;
		constexpr auto positionLerp = 0x78;
		constexpr auto menuOptions = 0x80;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x88;
		constexpr auto links = 0x90;
		constexpr auto linkedToNeighbours = 0x98;
		constexpr auto updateParentingAction = 0xa0;
		constexpr auto addedToParentEntity = 0xa8;
		constexpr auto itemSkin = 0xb0;
		constexpr auto entitySlots = 0xb8;
		constexpr auto triggers = 0xc0;
		constexpr auto isVisible = 0xc8;
		constexpr auto isAnimatorVisible = 0xc9;
		constexpr auto isShadowVisible = 0xca;
		constexpr auto localOccludee = 0xd0;
		constexpr auto bounds = 0xf0;
		constexpr auto impactEffect = 0x108;
		constexpr auto enableSaving = 0x110;
		constexpr auto syncPosition = 0x111;
		constexpr auto model = 0x118;
		constexpr auto flags = 0x120;
		constexpr auto parentBone = 0x124;
		constexpr auto skinID = 0x128;
		constexpr auto _components = 0x130;
		constexpr auto _name = 0x138;
		constexpr auto OwnerIDk__BackingField = 0x140;

		constexpr auto OnRpcMessage = 0x35bdc0;
		constexpr auto GetEntityMenu = 0x357960;
		constexpr auto GetMenuOptions = 0x2b1f00;
		constexpr auto get_HasMenuOptions = 0x2c7b60;
		constexpr auto GetItemOptions = 0x357f80;
		constexpr auto GetMovementModify = 0x358ad0;
		constexpr auto GetExtrapolationTime = 0x357aa0;
		constexpr auto GetInterpolationDelay = 0x357e60;
		constexpr auto GetInterpolationSmoothing = 0x357ef0;
		constexpr auto GetAngularVelocityClient = 0x357400;
		constexpr auto GetLocalVelocityClient = 0x3581d0;
		constexpr auto DrawInterpolationState = 0x3559d0;
		constexpr auto LerpIdleDisable = 0x35a7a0;
		constexpr auto ClientInit = 0x354f90;
		constexpr auto ClientOnEnable = 0x355040;
		constexpr auto OnPositionalFromNetwork = 0x35ba60;
		constexpr auto StartLerping = 0x35e900;
		constexpr auto StopLerping = 0x35ea80;
		constexpr auto ShouldLerp = 0x35e530;
		constexpr auto SetNetworkPosition = 0x35e020;
		constexpr auto SetNetworkRotation = 0x35e190;
		constexpr auto DoDestroyEffects = 0x3559a0;
		constexpr auto DoNetworkDestroy = 0x26b440;
		constexpr auto PostNetworkUpdate = 0x35d000;
		constexpr auto OnBecameRagdoll = 0x35b7a0;
		constexpr auto GetMenuInformation = 0x358350;
		constexpr auto GetMenuItems = 0x358740;
		constexpr auto OnUse = 0x35ce30;
		constexpr auto OnUseHeld = 0x35cca0;
		constexpr auto OnUseStopped = 0x2b1f00;
		constexpr auto OnRendered = 0x2b1f00;
		constexpr auto DoClientDestroy = 0x355740;
		constexpr auto GetEyeTransform = 0x357b30;
		constexpr auto NeedsCrosshair = 0x35b690;
		constexpr auto AlwaysShowCrosshair = 0x2c7b60;
		constexpr auto ShouldDestroyWithGroup = 0x35e480;
		constexpr auto DetachEffects = 0x355340;
		constexpr auto OnVoiceData = 0x2b1f00;
		constexpr auto OnCollision = 0x35b850;
		constexpr auto ReceiveCollisionMessages = 0x35d0f0;
		constexpr auto DebugClient = 0x2b1f00;
		constexpr auto OnDebugStart = 0x35b8a0;
		constexpr auto DebugText = 0x355280;
		constexpr auto HasFlag = 0x3597e0;
		constexpr auto ParentHasFlag = 0x35cf60;
		constexpr auto SetFlag = 0x35de50;
		constexpr auto IsOn = 0x3489f0;
		constexpr auto IsOpen = 0x359cf0;
		constexpr auto IsOnFire = 0x359ce0;
		constexpr auto IsLocked = 0x359a30;
		constexpr auto IsDebugging = 0x359980;
		constexpr auto IsDisabled = 0x359990;
		constexpr auto IsBroken = 0x359960;
		constexpr auto IsBusy = 0x359970;
		constexpr auto GetLogColor = 0x358300;
		constexpr auto OnFlagsChanged = 0x35b960;
		constexpr auto IsOccupied = 0x359b30;
		constexpr auto FindLink = 0x3565c0;
		constexpr auto EntityLinkBroadcast = 0x356180;
		constexpr auto ReceivedEntityLinkBroadcast = 0x35d180;
		constexpr auto GetEntityLinks = 0x357920;
		constexpr auto LinkToEntity = 0x35a7d0;
		constexpr auto LinkToNeighbours = 0x35aa30;
		constexpr auto InitEntityLinks = 0x359820;
		constexpr auto FreeEntityLinks = 0x357320;
		constexpr auto RefreshEntityLinks = 0x35d1f0;
		constexpr auto RequestFileFromServer = 0x35d730;
		constexpr auto Cl_ReceiveFilePng = 0x354e60;
		constexpr auto UpdateChildren = 0x35ec40;
		constexpr auto UpdateParenting = 0x35fa30;
		constexpr auto SetParentTransform = 0x35e260;
		constexpr auto UpdateDisableState = 0x35efb0;
		constexpr auto HasClientTransformOffset = 0x359640;
		constexpr auto RemoveClientTransformOffset = 0x35d500;
		constexpr auto AddClientTransformOffset = 0x354720;
		constexpr auto OnParentChangingClient = 0x2b1f00;
		constexpr auto GetBuildingPrivilege = 0x3578b0;
		constexpr auto ServerRPC = 0x35db10;
		constexpr auto ServerRPCStart = 0x35d960;
		constexpr auto ServerRPCSend = 0x35d8f0;
		constexpr auto CL_RPCMessage = 0x354a30;
		constexpr auto SendSignalBroadcast = 0x35d840;
		constexpr auto SignalFromServerEx = 0x35e550;
		constexpr auto SignalFromServer = 0x35e5e0;
		constexpr auto OnSignal = 0x2b1f00;
		constexpr auto OnSkinChanged = 0x35c970;
		constexpr auto OnSkinRefreshStart = 0x35cc80;
		constexpr auto OnSkinRefreshEnd = 0x35cc60;
		constexpr auto PreProcess = 0x35d020;
		constexpr auto HasAnySlot = 0x359560;
		constexpr auto GetSlot = 0x3590e0;
		constexpr auto GetSlotAnchorName = 0x358fa0;
		constexpr auto GetSlotAnchor = 0x359030;
		constexpr auto HasSlot = 0x2c7b60;
		constexpr auto get_Traits = 0x2cbe90;
		constexpr auto HasTrait = 0x3597f0;
		constexpr auto HasAnyTrait = 0x359610;
		constexpr auto EnterTrigger = 0x3560d0;
		constexpr auto LeaveTrigger = 0x35a700;
		constexpr auto RemoveFromTriggers = 0x35d560;
		constexpr auto ForceUpdateTriggersAction = 0x3568a0;
		constexpr auto ForceUpdateTriggers = 0x3568d0;
		constexpr auto MakeVisible = 0x35b670;
		constexpr auto UpdateCullingSpheres = 0x35ee30;
		constexpr auto RegisterForCulling = 0x35d2d0;
		constexpr auto OnVisibilityChanged = 0x2b1f00;
		constexpr auto UnregisterFromCulling = 0x35ebc0;
		constexpr auto UpdateCullingBounds = 0x35ed60;
		constexpr auto CheckVisibility = 0x354e40;
		constexpr auto CalcEntityVisUpdateRate = 0x354d20;
		constexpr auto DebugDrawCullingBounds = 0x3551b0;
		constexpr auto get_Components = 0x35fda0;
		constexpr auto ToPlayer = 0x2cbe90;
		constexpr auto get_IsNpc = 0x2c7b60;
		constexpr auto InitShared = 0x34d110;
		constexpr auto DestroyShared = 0x3519a0;
		constexpr auto ResetState = 0x35d7e0;
		constexpr auto InheritedVelocityScale = 0x2cc2c0;
		constexpr auto GetInheritedProjectileVelocity = 0x357cb0;
		constexpr auto GetInheritedThrowVelocity = 0x357e30;
		constexpr auto GetInheritedDropVelocity = 0x357bd0;
		constexpr auto GetParentVelocity = 0x358ce0;
		constexpr auto GetWorldVelocity = 0x359140;
		constexpr auto GetLocalVelocity = 0x358260;
		constexpr auto GetAngularVelocity = 0x357490;
		constexpr auto WorldSpaceBounds = 0x35fad0;
		constexpr auto PivotPoint = 0x326df0;
		constexpr auto CenterPoint = 0x354e00;
		constexpr auto ClosestPoint = 0x35FAC0;
		constexpr auto TriggerPoint = 0x354e00;
		constexpr auto Distance = 0x355600;
		constexpr auto SqrDistance = 0x35e7c0;
		constexpr auto Distance2D = 0x355470;
		constexpr auto SqrDistance2D = 0x35e630;
		constexpr auto IsVisible = 0x35a310;
		constexpr auto IsOlderThan = 0x359c40;
		constexpr auto IsOutside = 0x359d00;
		constexpr auto WaterFactor = 0x35fa40;
		constexpr auto BlocksWaterFor = 0x2c7b60;
		constexpr auto Health = 0x2cc2c0;
		constexpr auto MaxHealth = 0x2cc2c0;
		constexpr auto MaxVelocity = 0x2cc2c0;
		constexpr auto BoundsPadding = 0x3547c0;
		constexpr auto PenetrationResistance = 0x2cc4c0;
		constexpr auto GetImpactEffect = 0x357bc0;
		constexpr auto OnAttacked = 0x2b1f00;
		constexpr auto GetItem = 0x2cbe90;
		constexpr auto GiveItem = 0x359530;
		constexpr auto CanBeLooted = 0x2c9390;
		constexpr auto GetEntity = 0x2ebf10;
		constexpr auto ToString = 0x35ead0;
		constexpr auto Categorize = 0x354dd0;
		constexpr auto Log = 0x35b1c0;
		constexpr auto SetModel = 0x35df70;
		constexpr auto GetModel = 0x358ac0;
		constexpr auto GetBones = 0x357530;
		constexpr auto FindBone = 0x354E50;
		constexpr auto FindClosestBone = 0x356500;
		constexpr auto get_OwnerID = 0x35fe10;
		constexpr auto set_OwnerID = 0x35fe20;
		constexpr auto ShouldBlockProjectiles = 0x2c9390;
		constexpr auto ShouldInheritNetworkGroup = 0x2c9390;
		constexpr auto SupportsChildDeployables = 0x2c9390;
		constexpr auto BroadcastEntityMessage = 0x3547d0;
		constexpr auto OnEntityMessage = 0x2b1f00;
		constexpr auto Load = 0x35ad10;
		constexpr auto ctor = 0x35fc90;
		constexpr auto cctor = 0x35fc10;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x1458A60;
		constexpr auto get_deltaTime = 0x14588B0;
		constexpr auto get_fixedTime = 0x1458910;
		constexpr auto get_unscaledTime = 0x1458300;
		constexpr auto get_unscaledDeltaTime = 0x14582d0;
		constexpr auto get_fixedDeltaTime = 0x1458120;
		constexpr auto set_fixedDeltaTime = 0x1458330;
		constexpr auto get_maximumDeltaTime = 0x14581b0;
		constexpr auto set_maximumDeltaTime = 0x1458370;
		constexpr auto get_smoothDeltaTime = 0x1458240;
		constexpr auto get_timeScale = 0x1458A30;
		constexpr auto set_timeScale = 0x14583b0;
		constexpr auto get_frameCount = 0x1458180;
		constexpr auto get_renderedFrameCount = 0x1458210;
		constexpr auto get_realtimeSinceStartup = 0x14581e0;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x1AB79E0;
		constexpr auto get_defaultPhysicsScene = 0x1ab71a0;
		constexpr auto IgnoreCollision = 0x1ab3a80;
		constexpr auto Raycast = 0x1ab59f0;
		constexpr auto Linecast = 0x1ab3bc0;
		constexpr auto CapsuleCast = 0x1ab3370;
		constexpr auto SphereCast = 0x1ab6c60;
		constexpr auto Internal_RaycastAll = 0x1ab3b50;
		constexpr auto RaycastAll = 0x1ab4730;
		constexpr auto RaycastNonAlloc = 0x1ab4e50;
		constexpr auto Query_SphereCastAll = 0x1ab45d0;
		constexpr auto SphereCastAll = 0x1ab66d0;
		constexpr auto get_autoSyncTransforms = 0x1ab7130;
		constexpr auto set_autoSyncTransforms = 0x1ab7260;
		constexpr auto OverlapSphereNonAlloc = 0x1ab44a0;
		constexpr auto CheckSphere_Internal = 0x1ab3950;
		constexpr auto CheckSphere = 0x1ab39c0;
		constexpr auto SphereCastNonAlloc = 0x1ab6860;
		constexpr auto CheckCapsule_Internal = 0x1ab36b0;
		constexpr auto CheckCapsule = 0x1ab3720;
		constexpr auto CheckBox_Internal = 0x1ab34f0;
		constexpr auto CheckBox = 0x1ab3560;
		constexpr auto OverlapBox_Internal = 0x1ab4180;
		constexpr auto OverlapBox = 0x1ab41f0;
		constexpr auto OverlapBoxNonAlloc = 0x1ab4020;
		constexpr auto OverlapCapsuleNonAlloc = 0x1ab43b0;
		constexpr auto get_gravity_Injected = 0x1ab71e0;
		constexpr auto get_defaultPhysicsScene_Injected = 0x1ab7160;
		constexpr auto Internal_RaycastAll_Injected = 0x1ab3ae0;
		constexpr auto Query_SphereCastAll_Injected = 0x1ab4560;
		constexpr auto CheckSphere_Internal_Injected = 0x1ab38e0;
		constexpr auto CheckCapsule_Internal_Injected = 0x1ab3640;
		constexpr auto CheckBox_Internal_Injected = 0x1ab3480;
		constexpr auto OverlapBox_Internal_Injected = 0x1ab4110;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x341bb0;
		constexpr auto LookupNameLower = 0x3418f0;
		constexpr auto LookupNameUpper = 0x341a50;
		constexpr auto GetName = 0x341830;
		constexpr auto GetNameLower = 0x3416b0;
		constexpr auto GetNameUpper = 0x341770;
		constexpr auto cctor = 0x341cf0;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x13D8E00;
		constexpr auto get_gameObject = 0x13D8DC0;
		constexpr auto GetComponent = 0x13D8A00;
		constexpr auto GetComponentFastPath = 0x13D8890;
		constexpr auto GetComponentInChildren = 0x13D88F0;
		constexpr auto GetComponentInParent = 0x13D8980;
		constexpr auto GetComponents = 0x13d8320;
		constexpr auto GetComponentsForListInternal = 0x13d82c0;
		constexpr auto CompareTag = 0x13d8050;
		constexpr auto SendMessageUpwards = 0x13d8410;
		constexpr auto SendMessage = 0x13d8550;
		constexpr auto BroadcastMessage = 0x13d7fe0;
		constexpr auto ctor = 0x13d3410;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x130e7a0;
		constexpr auto get_position = 0x19FDF10;
		constexpr auto set_position = 0x19FE890;
		constexpr auto get_localPosition = 0x19fd420;
		constexpr auto set_localPosition = 0x19fde40;
		constexpr auto get_eulerAngles = 0x19fd120;
		constexpr auto set_eulerAngles = 0x19fdb90;
		constexpr auto get_localEulerAngles = 0x19fd340;
		constexpr auto set_localEulerAngles = 0x19fdd40;
		constexpr auto get_right = 0x19fd7a0;
		constexpr auto set_right = 0x19fe120;
		constexpr auto get_up = 0x19fd990;
		constexpr auto set_up = 0x19fe310;
		constexpr auto get_forward = 0x19fd1b0;
		constexpr auto set_forward = 0x19fdc40;
		constexpr auto get_rotation = 0x19FE100;
		constexpr auto set_rotation = 0x19FEA80;
		constexpr auto get_localRotation = 0x19fd4c0;
		constexpr auto set_localRotation = 0x19fdee0;
		constexpr auto get_localScale = 0x19fd560;
		constexpr auto set_localScale = 0x19fdf80;
		constexpr auto get_parent = 0x19fbf70;
		constexpr auto set_parent = 0x19fdfd0;
		constexpr auto get_parentInternal = 0x19fbf70;
		constexpr auto set_parentInternal = 0x19fcb60;
		constexpr auto GetParent = 0x19fbf70;
		constexpr auto SetParent = 0x19fcb60;
		constexpr auto get_worldToLocalMatrix = 0x19fdb30;
		constexpr auto get_localToWorldMatrix = 0x19fd600;
		constexpr auto SetPositionAndRotation = 0x19fcc10;
		constexpr auto Translate = 0x19fcf10;
		constexpr auto RotateAroundInternal = 0x19fc5c0;
		constexpr auto Rotate = 0x19fc940;
		constexpr auto RotateAround = 0x19fc620;
		constexpr auto LookAt = 0x19fc3f0;
		constexpr auto Internal_LookAt = 0x19fc050;
		constexpr auto TransformDirection = 0x19fccd0;
		constexpr auto InverseTransformDirection = 0x19FC8D0;
		constexpr auto TransformVector = 0x19fce50;
		constexpr auto TransformPoint = 0x19fcd90;
		constexpr auto InverseTransformPoint = 0x19FC990;
		constexpr auto get_root = 0x19fbfb0;
		constexpr auto GetRoot = 0x19fbfb0;
		constexpr auto get_childCount = 0x19fd0e0;
		constexpr auto SetAsFirstSibling = 0x19fca80;
		constexpr auto SetAsLastSibling = 0x19fcac0;
		constexpr auto FindRelativeTransformWithPath = 0x19fbdc0;
		constexpr auto Find = 0x19fbe20;
		constexpr auto get_lossyScale = 0x19fd6b0;
		constexpr auto IsChildOf = 0x19fc230;
		constexpr auto get_hasChanged = 0x19fd300;
		constexpr auto set_hasChanged = 0x19fdcf0;
		constexpr auto GetEnumerator = 0x19fbf00;
		constexpr auto GetChild = 0x19fbec0;
		constexpr auto get_position_Injected = 0x19fd700;
		constexpr auto set_position_Injected = 0x19fe080;
		constexpr auto get_localPosition_Injected = 0x19fd3d0;
		constexpr auto set_localPosition_Injected = 0x19fddf0;
		constexpr auto get_rotation_Injected = 0x19fd8f0;
		constexpr auto set_rotation_Injected = 0x19fe270;
		constexpr auto get_localRotation_Injected = 0x19fd470;
		constexpr auto set_localRotation_Injected = 0x19fde90;
		constexpr auto get_localScale_Injected = 0x19fd510;
		constexpr auto set_localScale_Injected = 0x19fdf30;
		constexpr auto get_worldToLocalMatrix_Injected = 0x19fdae0;
		constexpr auto get_localToWorldMatrix_Injected = 0x19fd5b0;
		constexpr auto SetPositionAndRotation_Injected = 0x19fcbb0;
		constexpr auto RotateAroundInternal_Injected = 0x19fc560;
		constexpr auto Internal_LookAt_Injected = 0x19fbff0;
		constexpr auto TransformDirection_Injected = 0x19fcc70;
		constexpr auto InverseTransformDirection_Injected = 0x19fc0b0;
		constexpr auto TransformVector_Injected = 0x19fcdf0;
		constexpr auto TransformPoint_Injected = 0x19fcd30;
		constexpr auto InverseTransformPoint_Injected = 0x19fc170;
		constexpr auto get_lossyScale_Injected = 0x19fd660;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0x4E3B20;
		constexpr auto Trace = 0x4E4410;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x656900;
		constexpr auto HitNormalWorld = 0x6567E0;
		constexpr auto BuildAttackMessage = 0x655790;
		constexpr auto Clear = 0x655f40;
		constexpr auto ctor = 0x26b440;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x1314850;
		constexpr auto Inverse = 0x1314bd0;
		constexpr auto Slerp = 0x1315650;
		constexpr auto SlerpUnclamped = 0x1315530;
		constexpr auto Lerp = 0x1314e00;
		constexpr auto LerpUnclamped = 0x1314ce0;
		constexpr auto Internal_FromEulerRad = 0x1314940;
		constexpr auto Internal_ToEulerRad = 0x1314af0;
		constexpr auto AngleAxis = 0x1314230;
		constexpr auto LookRotation = 0x1315820;
		constexpr auto ctor = 0xdc150;
		constexpr auto get_identity = 0x1315b50;
		constexpr auto op_Multiply = 0x1315f70;
		constexpr auto IsEqualUsingDot = 0x1314c60;
		constexpr auto op_Equality = 0x1315bc0;
		constexpr auto op_Inequality = 0x1315c80;
		constexpr auto Dot = 0x13143f0;
		constexpr auto SetLookRotation = 0x18d4e0;
		constexpr auto Angle = 0x13142d0;
		constexpr auto Internal_MakePositive = 0x13149d0;
		constexpr auto get_eulerAngles = 0x18d600;
		constexpr auto Euler = 0x1314520;
		constexpr auto RotateTowards = 0x1315100;
		constexpr auto GetHashCode = 0x18d470;
		constexpr auto Equals = 0x18d320;
		constexpr auto ToString = 0x18d5f0;
		constexpr auto cctor = 0x1315940;
		constexpr auto FromToRotation_Injected = 0x13147f0;
		constexpr auto Inverse_Injected = 0x1314b80;
		constexpr auto Slerp_Injected = 0x13155e0;
		constexpr auto SlerpUnclamped_Injected = 0x13154c0;
		constexpr auto Lerp_Injected = 0x1314d90;
		constexpr auto LerpUnclamped_Injected = 0x1314c70;
		constexpr auto Internal_FromEulerRad_Injected = 0x13148f0;
		constexpr auto Internal_ToEulerRad_Injected = 0x1314aa0;
		constexpr auto AngleAxis_Injected = 0x13141d0;
		constexpr auto LookRotation_Injected = 0x1314eb0;
	};

	namespace GamePhysics {
		constexpr auto colBuffer = 0x8;

		constexpr auto CheckSphere = 0x4e0250;
		constexpr auto CheckCapsule = 0x4dffa0;
		constexpr auto CheckOBB = 0x4e0120;
		constexpr auto CheckBounds = 0x4dfe40;
		constexpr auto OverlapSphere = 0x4e12b0;
		constexpr auto OverlapCapsule = 0x4e1030;
		constexpr auto OverlapOBB = 0x4e1160;
		constexpr auto OverlapBounds = 0x4e0e90;
		constexpr auto BufferToList = 0x4dfca0;
		constexpr auto Trace = 0x4e1930;
		constexpr auto TraceAll = 0x4e1860;
		constexpr auto TraceAllUnordered = 0x4e1590;
		constexpr auto LineOfSight = 0x4E0A00;
		constexpr auto LineOfSightInternal = 0x4e0420;
		constexpr auto Verify = 0x4e1b30;
		constexpr auto HandleTerrainCollision = 0x4e0310;
		constexpr auto Sort = 0x4e1490;
		constexpr auto cctor = 0x4e1e40;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0x687630;
		constexpr auto Test = 0x688c20;
		constexpr auto GetWaterDepth = 0x687de0;
		constexpr auto GetOverallWaterDepth = 0x687cc0;
		constexpr auto GetBuoyancyWaterInfo = 0x687890;
		constexpr auto GetWaterInfo = 0x688550;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0xf0ff10;
		constexpr auto Asin = 0xf0ff20;
		constexpr auto Atan = 0xf0ff40;
		constexpr auto Atan2 = 0xf0ff30;
		constexpr auto Ceiling = 0xf0ff50;
		constexpr auto Cos = 0xf0ff60;
		constexpr auto Cosh = 0xf0ff70;
		constexpr auto Floor = 0xf0ffa0;
		constexpr auto InternalRound = 0xf0ffb0;
		constexpr auto InternalTruncate = 0xf10210;
		constexpr auto Sin = 0xf10ca0;
		constexpr auto Tan = 0xf10ce0;
		constexpr auto Sinh = 0xf10cb0;
		constexpr auto Round = 0xf10980;
		constexpr auto SplitFractionDouble = 0xf10cc0;
		constexpr auto Truncate = 0xf10cf0;
		constexpr auto Sqrt = 0xf10cd0;
		constexpr auto Log = 0xf103e0;
		constexpr auto Log10 = 0xf10270;
		constexpr auto Exp = 0xf0ff90;
		constexpr auto Pow = 0xf107f0;
		constexpr auto Abs = 0xf0fe40;
		constexpr auto AbsHelper = 0xf0fce0;
		constexpr auto Max = 0xf10490;
		constexpr auto Min = 0xf107e0;
		constexpr auto Sign = 0xf10c60;
		constexpr auto DivRem = 0xf0ff80;
		constexpr auto cctor = 0xf10da0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1305640;
		constexpr auto IsPowerOfTwo = 0x1305a60;
		constexpr auto NextPowerOfTwo = 0x13061d0;
		constexpr auto GammaToLinearSpace = 0x1305930;
		constexpr auto LinearToGammaSpace = 0x1305cc0;
		constexpr auto FloatToHalf = 0x1305830;
		constexpr auto HalfToFloat = 0x1305970;
		constexpr auto PerlinNoise = 0x1306210;
		constexpr auto Sin = 0x1306460;
		constexpr auto Cos = 0x1305680;
		constexpr auto Tan = 0x1306940;
		constexpr auto Asin = 0x13053e0;
		constexpr auto Acos = 0x13052d0;
		constexpr auto Atan = 0x13054c0;
		constexpr auto Atan2 = 0x1305440;
		constexpr auto Sqrt = 0x13068e0;
		constexpr auto Abs = 0x1305270;
		constexpr auto Min = 0x1305e70;
		constexpr auto Max = 0x1305e40;
		constexpr auto Pow = 0x1306260;
		constexpr auto Exp = 0x13057d0;
		constexpr auto Log = 0x1305dc0;
		constexpr auto Log10 = 0x1305d00;
		constexpr auto Ceil = 0x1305580;
		constexpr auto Floor = 0x13058d0;
		constexpr auto Round = 0x13063e0;
		constexpr auto CeilToInt = 0x1305520;
		constexpr auto FloorToInt = 0x1306030;
		constexpr auto RoundToInt = 0x1306380;
		constexpr auto Sign = 0x1306440;
		constexpr auto Clamp = 0x1305600;
		constexpr auto Clamp01 = 0x13055e0;
		constexpr auto Lerp = 0x1305c20;
		constexpr auto LerpUnclamped = 0x1305c00;
		constexpr auto LerpAngle = 0x1305aa0;
		constexpr auto MoveTowards = 0x13060e0;
		constexpr auto MoveTowardsAngle = 0x1305e80;
		constexpr auto SmoothStep = 0x1306820;
		constexpr auto Approximately = 0x1305330;
		constexpr auto SmoothDamp = 0x1306650;
		constexpr auto Repeat = 0x13062e0;
		constexpr auto InverseLerp = 0x13059b0;
		constexpr auto DeltaAngle = 0x13056e0;
		constexpr auto cctor = 0x13069a0;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x238;
		constexpr auto __menuOption_Menu_KnockDoor = 0x290;
		constexpr auto __menuOption_Menu_OpenDoor = 0x2e8;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x340;
		constexpr auto knockEffect = 0x398;
		constexpr auto canTakeLock = 0x3a0;
		constexpr auto hasHatch = 0x3a1;
		constexpr auto canTakeCloser = 0x3a2;
		constexpr auto canTakeKnocker = 0x3a3;
		constexpr auto canNpcOpen = 0x3a4;
		constexpr auto canHandOpen = 0x3a5;
		constexpr auto isSecurityDoor = 0x3a6;

		constexpr auto GetMenuOptions = 0x61a980;
		constexpr auto get_HasMenuOptions = 0x61b6a0;
		constexpr auto OnRpcMessage = 0x61b590;
		constexpr auto HasSlot = 0x61b350;
		constexpr auto CanPickup = 0x61a810;
		constexpr auto Menu_OpenDoor = 0x61b500;
		constexpr auto Menu_OpenDoor_ShowIf = 0x61b4c0;
		constexpr auto Menu_CloseDoor = 0x61b3d0;
		constexpr auto Menu_CloseDoor_ShowIf = 0x61b390;
		constexpr auto Menu_KnockDoor = 0x61b480;
		constexpr auto Menu_KnockDoor_ShowIf = 0x61b410;
		constexpr auto Menu_ToggleHatch = 0x61b550;
		constexpr auto Menu_ToggleHatch_ShowIf = 0x61b540;
		constexpr auto NeedsCrosshair = 0x2c9390;
		constexpr auto BoundsPadding = 0x2c8f60;
		constexpr auto ctor = 0x61b680;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x130f050;
		constexpr auto GetHashCode = 0x130f040;
		constexpr auto Equals = 0x130ec60;
		constexpr auto op_Implicit = 0x1310050;
		constexpr auto CompareBaseObjects = 0x130e970;
		constexpr auto IsNativeObjectAlive = 0x130fca0;
		constexpr auto GetCachedPtr = 0x1300eb0;
		constexpr auto get_name = 0x130fe70;
		constexpr auto set_name = 0x1310A90;
		constexpr auto Instantiate = 0x130f830;
		constexpr auto Destroy = 0x130eb60;
		constexpr auto DestroyImmediate = 0x130eb10;
		constexpr auto FindObjectsOfType = 0x130f000;
		constexpr auto DontDestroyOnLoad = 0x130ec20;
		constexpr auto get_hideFlags = 0x130fe30;
		constexpr auto set_hideFlags = 0x1310290;
		constexpr auto CheckNullArgument = 0x130e900;
		constexpr auto FindObjectOfType = 0x130ef70;
		constexpr auto ToString = 0x130fd40;
		constexpr auto op_Equality = 0x130fee0;
		constexpr auto op_Inequality = 0x1310120;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x130f1c0;
		constexpr auto Internal_CloneSingle = 0x130fb70;
		constexpr auto Internal_CloneSingleWithParent = 0x130fb10;
		constexpr auto Internal_InstantiateSingle = 0x130fc10;
		constexpr auto GetName = 0x130f180;
		constexpr auto SetName = 0x130fcf0;
		constexpr auto FindObjectFromInstanceID = 0x130ef30;
		constexpr auto ctor = 0x26b440;
		constexpr auto cctor = 0x130fdf0;
		constexpr auto Internal_InstantiateSingle_Injected = 0x130fbb0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x260;
		constexpr auto canAiHearIt = 0x261;
		constexpr auto onlyThrowAsProjectile = 0x262;
		constexpr auto damageProperties = 0x268;
		constexpr auto damageTypes = 0x270;
		constexpr auto maxDistance = 0x278;
		constexpr auto attackRadius = 0x27c;
		constexpr auto isAutomatic = 0x280;
		constexpr auto blockSprintOnAttack = 0x281;
		constexpr auto strikeFX = 0x288;
		constexpr auto useStandardHitEffects = 0x290;
		constexpr auto aiStrikeDelay = 0x294;
		constexpr auto swingEffect = 0x298;
		constexpr auto materialStrikeFX = 0x2a0;
		constexpr auto heartStress = 0x2a8;
		constexpr auto gathering = 0x2b0;
		constexpr auto throwReady = 0x2b8;

		constexpr auto OnRpcMessage = 0x2ca9d0;
		constexpr auto GetInheritedVelocity = 0x2ca470;
		constexpr auto DoThrow = 0x2c9c40;
		constexpr auto CreateProjectile = 0x2c9600;
		constexpr auto GetAttackStats = 0x2ca3e0;
		constexpr auto DoAttackShared = 0x2c97b0;
		constexpr auto OnInput = 0x2ca640;
		constexpr auto ClientAttack = 0x2b1f00;
		constexpr auto OnHolstered = 0x2ca620;
		constexpr auto ProcessAttack = 0x2cab80;
		constexpr auto DoAttack = 0x2c9a00;
		constexpr auto DoViewmodelImpact = 0x2ca350;
		constexpr auto OnViewmodelEvent = 0x2caac0;
		constexpr auto GetGatherInfoFromIndex = 0x2ca440;
		constexpr auto CanHit = 0x2c9390;
		constexpr auto TotalDamage = 0x2cae10;
		constexpr auto CanBeUsedInWater = 0x2c9390;
		constexpr auto GetStrikeEffectPath = 0x2ca4c0;
		constexpr auto ctor = 0x2caf70;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x5e08e0;
		constexpr auto GetSpreadScalar = 0x5e0920;
		constexpr auto GetIndexedSpreadScalar = 0x5e0850;
		constexpr auto GetAverageVelocity = 0x5e0840;
		constexpr auto GetMinVelocity = 0x5e08d0;
		constexpr auto GetMaxVelocity = 0x5e08c0;
		constexpr auto IsAmmo = 0x5e0980;
		constexpr auto ServerProjectileHit = 0x5e0990;
		constexpr auto ctor = 0x5e0a60;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto shotsUntilMax = 0x54;

		constexpr auto ctor = 0x45aef0;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto itemMods = 0xc8;
		constexpr auto Traits = 0xd0;
		constexpr auto skins = 0xd8;
		constexpr auto _skins2 = 0xe0;
		constexpr auto panel = 0xe8;
		constexpr auto ItemModWearablek__BackingField = 0xf0;
		constexpr auto isHoldablek__BackingField = 0xf8;
		constexpr auto isUsablek__BackingField = 0xf9;
		constexpr auto CraftableWithSkink__BackingField = 0xfa;
		constexpr auto Children = 0x100;

		constexpr auto get_skins2 = 0x5d8380;
		constexpr auto InvalidateWorkshopSkinCache = 0x5d80d0;
		constexpr auto get_Blueprint = 0x5d81e0;
		constexpr auto get_craftingStackable = 0x5d82a0;
		constexpr auto HasFlag = 0x5d7db0;
		constexpr auto Initialize = 0x5d7dc0;
		constexpr auto GetDisplayName = 0x5d7cb0;
		constexpr auto GetDescriptionText = 0x5d7c10;
		constexpr auto FindIconSprite = 0x5d7950;
		constexpr auto get_isWearable = 0x5d8320;
		constexpr auto get_ItemModWearable = 0x5d8290;
		constexpr auto set_ItemModWearable = 0x5d8580;
		constexpr auto get_isHoldable = 0x5d8300;
		constexpr auto set_isHoldable = 0x5d8590;
		constexpr auto get_isUsable = 0x5d8310;
		constexpr auto set_isUsable = 0x5d85a0;
		constexpr auto get_HasSkins = 0x5d8230;
		constexpr auto get_CraftableWithSkin = 0x5d8220;
		constexpr auto set_CraftableWithSkin = 0x5d8570;
		constexpr auto ctor = 0x5d8170;
		constexpr auto Initializeb__42_0 = 0x5d80f0;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto offsetAngles = 0x84;
		constexpr auto ignoredButtons = 0x90;
		constexpr auto hasKeyFocus = 0x94;

		constexpr auto OnDisable = 0x7727d0;
		constexpr auto FrameUpdate = 0x771e30;
		constexpr auto Flip = 0x771cd0;
		constexpr auto AdjustMouseMovement = 0x7704f0;
		constexpr auto UpdateViewAngles = 0x772970;
		constexpr auto ApplyViewAngles = 0x7706f0;
		constexpr auto SetViewVars = 0x772850;
		constexpr auto FinalizeRecoil = 0x771b00;
		constexpr auto ClientAngles = 0x771ad0;
		constexpr auto ClientLookVars = 0x771ae0;
		constexpr auto HeadAngles = 0x59f180;
		constexpr auto HeadLookVars = 0x772020;
		constexpr auto ModifyInputState = 0x772740;
		constexpr auto IsButtonDownNative = 0x772340;
		constexpr auto BuildInputState = 0x771200;
		constexpr auto UpdateButton = 0x7728e0;
		constexpr auto IgnoreCurrentButtons = 0x772040;
		constexpr auto get_hasOnlyPartialKeyInput = 0x772c40;
		constexpr auto get_hasNoKeyInput = 0x772ad0;
		constexpr auto UpdateKeyFocus = 0x772950;
		constexpr auto IgnoreCurrentKeys = 0x772150;
		constexpr auto ctor = 0x772a60;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto smoothLookDir = 0x2c;
		constexpr auto Shoulders = 0x38;
		constexpr auto LegParts = 0x40;
		constexpr auto fakeSpineBones = 0x48;
		constexpr auto extraLeanBack = 0x50;
		constexpr auto drawState = 0x54;
		constexpr auto speed = 0x2c;
		constexpr auto acceleration = 0x30;
		constexpr auto rotationYaw = 0x34;
		constexpr auto forward = 0x38;
		constexpr auto right = 0x3c;
		constexpr auto up = 0x40;
		constexpr auto ducked = 0x44;
		constexpr auto grounded = 0x48;
		constexpr auto waterlevel = 0x4c;
		constexpr auto attack = 0x50;
		constexpr auto attack_alt = 0x54;
		constexpr auto deploy = 0x58;
		constexpr auto reload = 0x5c;
		constexpr auto throwWeapon = 0x60;
		constexpr auto holster = 0x64;
		constexpr auto aiming = 0x68;
		constexpr auto onLadder = 0x6c;
		constexpr auto posing = 0x70;
		constexpr auto poseType = 0x74;
		constexpr auto relaxGunPose = 0x78;
		constexpr auto vehicle_aim_yaw = 0x7c;
		constexpr auto vehicle_aim_speed = 0x80;
		constexpr auto leftFootIK = 0x84;
		constexpr auto rightFootIK = 0x88;
		constexpr auto collision = 0x58;
		constexpr auto censorshipCube = 0x60;
		constexpr auto censorshipCubeBreasts = 0x68;
		constexpr auto jawBone = 0x70;
		constexpr auto neckBone = 0x78;
		constexpr auto headBone = 0x80;
		constexpr auto eyeController = 0x88;
		constexpr auto SpineBones = 0x90;
		constexpr auto leftFootBone = 0x98;
		constexpr auto rightFootBone = 0xa0;
		constexpr auto leftHandPropBone = 0xa8;
		constexpr auto rightHandPropBone = 0xb0;
		constexpr auto rightHandTarget = 0xb8;
		constexpr auto leftHandTargetPosition = 0xc4;
		constexpr auto leftHandTargetRotation = 0xd0;
		constexpr auto rightHandTargetPosition = 0xe0;
		constexpr auto rightHandTargetRotation = 0xec;
		constexpr auto rightFootTargetPosition = 0xfc;
		constexpr auto rightFootTargetRotation = 0x108;
		constexpr auto leftFootTargetPosition = 0x118;
		constexpr auto leftFootTargetRotation = 0x124;
		constexpr auto CinematicAnimationController = 0x138;
		constexpr auto DefaultHoldType = 0x140;
		constexpr auto SleepGesture = 0x148;
		constexpr auto WoundedGesture = 0x150;
		constexpr auto CurrentGesture = 0x158;
		constexpr auto MaleSkin = 0x160;
		constexpr auto FemaleSkin = 0x168;
		constexpr auto subsurfaceProfile = 0x170;
		constexpr auto voiceVolume = 0x178;
		constexpr auto skinColor = 0x17c;
		constexpr auto skinNumber = 0x180;
		constexpr auto meshNumber = 0x184;
		constexpr auto hairNumber = 0x188;
		constexpr auto skinType = 0x18c;
		constexpr auto movementSounds = 0x190;
		constexpr auto showSash = 0x198;
		constexpr auto tempPoseType = 0x19c;
		constexpr auto overrideSkinSeedk__BackingField = 0x1a0;
		constexpr auto AimAnglesk__BackingField = 0x1a8;
		constexpr auto LookAnglesk__BackingField = 0x1b8;
		constexpr auto modelState = 0x1c8;
		constexpr auto position = 0x1d0;
		constexpr auto velocity = 0x1dc;
		constexpr auto speedOverride = 0x1e8;
		constexpr auto newVelocity = 0x1f4;
		constexpr auto rotation = 0x200;
		constexpr auto mountedRotation = 0x210;
		constexpr auto smoothLeftFootIK = 0x220;
		constexpr auto smoothRightFootIK = 0x22c;
		constexpr auto drawShadowOnly = 0x238;
		constexpr auto isIncapacitated = 0x239;
		constexpr auto flinchLocation = 0x23c;
		constexpr auto visible = 0x240;
		constexpr auto nameTag = 0x248;
		constexpr auto animatorNeedsWarmup = 0x250;
		constexpr auto isLocalPlayer = 0x251;
		constexpr auto aimSoundDef = 0x258;
		constexpr auto aimEndSoundDef = 0x260;
		constexpr auto InGesture = 0x268;
		constexpr auto InCinematic = 0x269;
		constexpr auto defaultAnimatorController = 0x270;
		constexpr auto _multiMesh = 0x278;
		constexpr auto _animator = 0x280;
		constexpr auto _lodGroup = 0x288;
		constexpr auto _currentGesture = 0x290;
		constexpr auto holdTypeLock = 0x298;
		constexpr auto wasMountedRightAim = 0x29c;
		constexpr auto cachedMask = 0x2a0;
		constexpr auto cachedConstructionMask = 0x2a4;
		constexpr auto WorkshopHeldEntity = 0x2a8;
		constexpr auto mountedSpineLookWeight = 0x2b0;
		constexpr auto mountedAnimSpeed = 0x2b4;
		constexpr auto IsNpck__BackingField = 0x2b8;
		constexpr auto timeSinceLeftFootTest = 0x2bc;
		constexpr auto cachedLeftFootPos = 0x2c0;
		constexpr auto cachedLeftFootNormal = 0x2cc;
		constexpr auto timeSinceRightFootTest = 0x2d8;
		constexpr auto cachedRightFootPos = 0x2dc;
		constexpr auto cachedRightFootNormal = 0x2e8;

		constexpr auto SpineIk = 0x77d4c0;
		constexpr auto ParentArmsToCamera = 0x77bc30;
		constexpr auto OnAnimatorIK = 0x77b3c0;
		constexpr auto HandIK = 0x77a1a0;
		constexpr auto FootIK = 0x776e50;
		constexpr auto HeadIK = 0x77a600;
		constexpr auto get_ShouldDoLegs = 0x781f60;
		constexpr auto get_ShouldShowHands = 0x781fe0;
		constexpr auto ClearLegs = 0x776490;
		constexpr auto RebuildLegs = 0x77c4e0;
		constexpr auto InitializeLegSpineBones = 0x77a9d0;
		constexpr auto UpdateLegsBeforeRender = 0x77eaa0;
		constexpr auto AddLegRenderer = 0x775b60;
		constexpr auto SwapLegBone = 0x77ddb0;
		constexpr auto GetFlat = 0x7796b0;
		constexpr auto RebuildAll = 0x77c1c0;
		constexpr auto get_overrideSkinSeed = 0x782290;
		constexpr auto set_overrideSkinSeed = 0x7822d0;
		constexpr auto get_IsFemale = 0x781f10;
		constexpr auto get_SkinSet = 0x782090;
		constexpr auto get_AimAngles = 0x781f00;
		constexpr auto set_AimAngles = 0x7822a0;
		constexpr auto get_LookAngles = 0x781f50;
		constexpr auto set_LookAngles = 0x7822c0;
		constexpr auto get_IsFirstPerson = 0x781f20;
		constexpr auto get_IsNpc = 0x781f40;
		constexpr auto set_IsNpc = 0x7822b0;
		constexpr auto get_multiMesh = 0x7821f0;
		constexpr auto get_animator = 0x7820b0;
		constexpr auto get_lodGroup = 0x782150;
		constexpr auto GetTargetVelocity = 0x77a040;
		constexpr auto Awake = 0x7763f0;
		constexpr auto OnEnable = 0x77b710;
		constexpr auto OnDisable = 0x77b4f0;
		constexpr auto UpdateMultiMesh = 0x77fac0;
		constexpr auto UpdateCensorship = 0x77e210;
		constexpr auto UpdateCollider = 0x77e680;
		constexpr auto UpdateModelState = 0x77fa70;
		constexpr auto UpdatePosition = 0x780230;
		constexpr auto UpdateRotation = 0x780350;
		constexpr auto UpdateLocalVelocity = 0x77f9a0;
		constexpr auto UpdateVelocity = 0x780bf0;
		constexpr auto UpdateParameters = 0x77fbc0;
		constexpr auto UpdateFrom = 0x77e860;
		constexpr auto UpdateGlobalShaderConstants = 0x77e910;
		constexpr auto LateCycle = 0x77ae30;
		constexpr auto FrameUpdate = 0x778fd0;
		constexpr auto FrameUpdate_Default = 0x7786c0;
		constexpr auto FrameUpdate_Sleeping = 0x778d80;
		constexpr auto FrameUpdate_Incapacitated = 0x778850;
		constexpr auto FrameUpdate_OnLadder = 0x778ae0;
		constexpr auto GetAim360 = 0x779440;
		constexpr auto UpdateVehicleAim360 = 0x780790;
		constexpr auto DoAimingSounds = 0x776c10;
		constexpr auto SetAimSounds = 0x77cdd0;
		constexpr auto SetMountedLookAtWeight = 0x77d390;
		constexpr auto SetMountedAnimationSpeed = 0x77d380;
		constexpr auto UpdateLocalPlayerPosition = 0x77f650;
		constexpr auto Attack = 0x776370;
		constexpr auto AltAttack = 0x776030;
		constexpr auto Deploy = 0x776b60;
		constexpr auto Reload = 0x77cc80;
		constexpr auto Holster = 0x77a950;
		constexpr auto Flinch = 0x776df0;
		constexpr auto Throw = 0x77df90;
		constexpr auto Gesture = 0x779300;
		constexpr auto AnimatorWarmup = 0x7760e0;
		constexpr auto AlwaysAnimate = 0x7760b0;
		constexpr auto SetHoldType = 0x77d000;
		constexpr auto FadeOutGestureLayer = 0x776d50;
		constexpr auto SetGesture = 0x77ce10;
		constexpr auto StopGesture = 0x77dcb0;
		constexpr auto PlayCinematic = 0x77c0a0;
		constexpr auto StopCinematic = 0x77dc70;
		constexpr auto Clear = 0x7765f0;
		constexpr auto Rebuild = 0x77c770;
		constexpr auto AddPart = 0x775e90;
		constexpr auto RemovePart = 0x77cd00;
		constexpr auto HasPart = 0x77a540;
		constexpr auto IsBarefoot = 0x77ada0;
		constexpr auto GetSkinColor = 0x779fc0;
		constexpr auto SetSkinProperties = 0x77d3a0;
		constexpr auto RefreshUnderwear = 0x77c8f0;
		constexpr auto ForceModelSeed = 0x778490;
		constexpr auto FindBone = 0x776dc0;
		constexpr auto GetBones = 0x779680;
		constexpr auto GetFootPlacement = 0x7796f0;
		constexpr auto ApplyVisibility = 0x776140;
		constexpr auto ToggleUpdateOffscreen = 0x77e030;
		constexpr auto OnParentDestroying = 0x77bb30;
		constexpr auto WorkshopPreviewSetup = 0x780f30;
		constexpr auto ctor = 0x781d50;
		constexpr auto cctor = 0x781940;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x17d0af0;
		constexpr auto Dispose = 0x17d06f0;
		constexpr auto EnterPool = 0x1289510;
		constexpr auto LeavePool = 0x1289540;
		constexpr auto CopyTo = 0x17ceda0;
		constexpr auto Copy = 0x17cee60;
		constexpr auto Deserialize = 0x17cfbf0;
		constexpr auto DeserializeLengthDelimited = 0x17ceec0;
		constexpr auto DeserializeLength = 0x17cf370;
		constexpr auto FromProto = 0x17d0770;
		constexpr auto WriteToStream = 0x17d19b0;
		constexpr auto WriteToStreamDelta = 0x17d19d0;
		constexpr auto ReadFromStream = 0x17d0ad0;
		constexpr auto SerializeDelta = 0x17d0fa0;
		constexpr auto Serialize = 0x17d15c0;
		constexpr auto ToProtoBytes = 0x17d19a0;
		constexpr auto ToProto = 0x17d19b0;
		constexpr auto SerializeToBytes = 0x17d14b0;
		constexpr auto SerializeLengthDelimited = 0x17d1400;
		constexpr auto ctor = 0xb1e9a0;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0x7739a0;
		constexpr auto Initialize = 0x773620;
		constexpr auto DoDestroy = 0x772ed0;
		constexpr auto ClientInit = 0x772e50;
		constexpr auto UpdatedItemContainer = 0x773df0;
		constexpr auto FindItemUID = 0x773440;
		constexpr auto FindItemID = 0x773160;
		constexpr auto FindItemIDs = 0x773350;
		constexpr auto FindContainer = 0x772fb0;
		constexpr auto GetContainer = 0x7735a0;
		constexpr auto Load = 0x773850;
		constexpr auto GetAmount = 0x773520;
		constexpr auto AllItems = 0x772d80;
		constexpr auto AllItemsNoAlloc = 0x772cb0;
		constexpr auto FindAmmo = 0x772f60;
		constexpr auto HasAmmo = 0x7735c0;
		constexpr auto ctor = 0x773fe0;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItem = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x5d6250;
		constexpr auto SetFlag = 0x5d70d0;
		constexpr auto IsLocked = 0x5d63e0;
		constexpr auto PlayerItemInputBlocked = 0x5d6e00;
		constexpr auto OnChanged = 0x5d6d60;
		constexpr auto ClientInitialize = 0x5d5590;
		constexpr auto FindItemByUID = 0x5d59c0;
		constexpr auto IsFull = 0x5d6390;
		constexpr auto CanTake = 0x5d5460;
		constexpr auto GetMaxTransferAmount = 0x5d5f00;
		constexpr auto Insert = 0x5d6260;
		constexpr auto SlotTaken = 0x5d70f0;
		constexpr auto GetSlot = 0x5d60b0;
		constexpr auto FindPosition = 0x5d5cf0;
		constexpr auto Clear = 0x5d54b0;
		constexpr auto Kill = 0x5d63f0;
		constexpr auto GetAmount = 0x5d5d80;
		constexpr auto FindItemByItemID = 0x5d5850;
		constexpr auto FindItemsByItemName = 0x5d5b50;
		constexpr auto FindItemsByItemID = 0x5d5aa0;
		constexpr auto Save = 0x5d6e10;
		constexpr auto Load = 0x5d66b0;
		constexpr auto GetOwnerPlayer = 0x3adac0;
		constexpr auto FindAmmo = 0x5d56a0;
		constexpr auto HasAmmo = 0x5d6180;
		constexpr auto ContentsHash = 0x5d55d0;
		constexpr auto FindContainer = 0x5d5760;
		constexpr auto CanAcceptItem = 0x5d5010;
		constexpr auto ctor = 0x5d7110;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0x5e7240;
		constexpr auto FormatAmount = 0x5e5f40;
		constexpr auto set_condition = 0x5e8200;
		constexpr auto get_condition = 0x5d41a0;
		constexpr auto set_maxCondition = 0x5e8280;
		constexpr auto get_maxCondition = 0x5e7fd0;
		constexpr auto get_maxConditionNormalized = 0x5e7fa0;
		constexpr auto get_conditionNormalized = 0x5e7b30;
		constexpr auto set_conditionNormalized = 0x5e8160;
		constexpr auto get_hasCondition = 0x5e7c30;
		constexpr auto get_isBroken = 0x5e7e70;
		constexpr auto get_despawnMultiplier = 0x5e7b70;
		constexpr auto get_blueprintTargetDef = 0x5e7b00;
		constexpr auto get_blueprintTarget = 0x5e7b20;
		constexpr auto set_blueprintTarget = 0x5e80d0;
		constexpr auto get_blueprintAmount = 0x5e7af0;
		constexpr auto set_blueprintAmount = 0x5e80c0;
		constexpr auto IsBlueprint = 0x5e6230;
		constexpr auto add_OnDirty = 0x5e7a30;
		constexpr auto remove_OnDirty = 0x5e8020;
		constexpr auto HasFlag = 0x5e6220;
		constexpr auto SetFlag = 0x5e6d40;
		constexpr auto IsOn = 0x5e6460;
		constexpr auto IsOnFire = 0x5e6450;
		constexpr auto IsCooking = 0x5e6410;
		constexpr auto IsLocked = 0x5e6420;
		constexpr auto get_parentItem = 0x5e7fe0;
		constexpr auto MarkDirty = 0x5e6890;
		constexpr auto OnChanged = 0x5e6980;
		constexpr auto CollectedForCrafting = 0x2b1f00;
		constexpr auto ReturnedFromCancelledCraft = 0x2b1f00;
		constexpr auto IsChildContainer = 0x5e6280;
		constexpr auto IsBusy = 0x5e6250;
		constexpr auto BusyFor = 0x5e5b00;
		constexpr auto Remove = 0x5e6b30;
		constexpr auto DoRemove = 0x5e5cb0;
		constexpr auto SwitchOnOff = 0x5e6ed0;
		constexpr auto LockUnlock = 0x5e6810;
		constexpr auto get_temperature = 0x5e8000;
		constexpr auto GetOwnerPlayer = 0x5e60c0;
		constexpr auto CanBeHeld = 0x5e5b30;
		constexpr auto CanStack = 0x5e5b70;
		constexpr auto IsValid = 0x5e6470;
		constexpr auto SetWorldEntity = 0x5e6d60;
		constexpr auto OnMovedToWorld = 0x5e6aa0;
		constexpr auto GetWorldEntity = 0x5e60e0;
		constexpr auto GetHeldEntity = 0x5e60a0;
		constexpr auto BeltBarSelect = 0x5e5a60;
		constexpr auto HasAmmo = 0x5e6100;
		constexpr auto FindAmmo = 0x5e5d00;
		constexpr auto ToString = 0x5e6f50;
		constexpr auto FindItem = 0x5e5e30;
		constexpr auto MaxStackable = 0x5e68f0;
		constexpr auto get_iconSprite = 0x5e7cd0;
		constexpr auto get_isLoadingIconSprite = 0x5e7ea0;
		constexpr auto get_Traits = 0x5e7ad0;
		constexpr auto Save = 0x5e6b90;
		constexpr auto Load = 0x5e6480;
		constexpr auto ctor = 0x5e7a10;
		constexpr auto cctor = 0x5e7940;
		constexpr auto get_iconSpriteb__91_0 = 0x5e7230;
		constexpr auto get_isLoadingIconSpriteb__93_0 = 0x5e7230;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x5c9490;
		constexpr auto BuildBoneDictionary = 0x5c8c30;
		constexpr auto GetSkin = 0x5c8fb0;
		constexpr auto FindBoneInternal = 0x5c8ce0;
		constexpr auto FindBone = 0x5c8d70;
		constexpr auto GetBones = 0x5c8f80;
		constexpr auto FindClosestBone = 0x5c8de0;
		constexpr auto get_lodGroup = 0x5c9c80;
		constexpr auto OnDisable = 0x5c9360;
		constexpr auto SyncBones = 0x5c9860;
		constexpr auto Trigger = 0x5c9bd0;
		constexpr auto GetTransform = 0x5c8fc0;
		constexpr auto ApplyVisibility = 0x5c8aa0;
		constexpr auto PreProcess = 0x5c94a0;
		constexpr auto ctor = 0x26b430;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x260;
		constexpr auto healDurationOther = 0x264;
		constexpr auto maxDistanceOther = 0x268;
		constexpr auto canUseOnOther = 0x26c;
		constexpr auto canRevive = 0x26d;
		constexpr auto useTarget = 0x270;
		constexpr auto resetTime = 0x278;

		constexpr auto OnRpcMessage = 0x5b7020;
		constexpr auto GetTarget = 0x5b6920;
		constexpr auto AnyPressed = 0x5b6850;
		constexpr auto OnInput = 0x5b6cd0;
		constexpr auto OnViewmodelEvent = 0x5b73f0;
		constexpr auto Reset = 0x5b7540;
		constexpr auto OnDeploy = 0x5b6c70;
		constexpr auto OnHolstered = 0x5b6ca0;
		constexpr auto ctor = 0x5b7560;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x148;
		constexpr auto punchAdded = 0x150;
		constexpr auto lastPunchTime = 0x15c;
		constexpr auto worldModelAnimator = 0x160;
		constexpr auto thirdPersonDeploySound = 0x168;
		constexpr auto thirdPersonAimSound = 0x170;
		constexpr auto thirdPersonAimEndSound = 0x178;
		constexpr auto viewModel = 0x180;
		constexpr auto isDeployed = 0x188;
		constexpr auto nextExamineTime = 0x18c;
		constexpr auto handBone = 0x190;
		constexpr auto HoldAnimationOverride = 0x198;
		constexpr auto toolType = 0x1a0;
		constexpr auto isBuildingTool = 0x1a1;
		constexpr auto hostileScore = 0x1a4;
		constexpr auto holsterInfo = 0x1a8;
		constexpr auto HeldCameraMode = 0x1b0;
		constexpr auto FirstPersonArmOffset = 0x1b4;
		constexpr auto FirstPersonArmRotation = 0x1c0;
		constexpr auto FirstPersonRotationStrength = 0x1cc;
		constexpr auto ownerItemUID = 0x1d0;

		constexpr auto OnRpcMessage = 0x650c60;
		constexpr auto AddPunch = 0x64ffe0;
		constexpr auto CL_Punch = 0x6500b0;
		constexpr auto DoRecoilCompensation = 0x2b1f00;
		constexpr auto SimPunches = 0x651300;
		constexpr auto ClientInit = 0x650160;
		constexpr auto GetFovOverride = 0x650390;
		constexpr auto DoNetworkDestroy = 0x650230;
		constexpr auto PostLateClientCycle = 0x2b1f00;
		constexpr auto PostNetworkUpdate = 0x651110;
		constexpr auto UpdateHolsteredOffset = 0x6517e0;
		constexpr auto EditViewAngles = 0x2b1f00;
		constexpr auto ClampPitch = 0x2b1f00;
		constexpr auto OnFrame = 0x650ad0;
		constexpr auto OnInput = 0x2b1f00;
		constexpr auto Examine = 0x650270;
		constexpr auto OnDeploy = 0x6508b0;
		constexpr auto OnDeployed = 0x650ac0;
		constexpr auto OnHolster = 0x650af0;
		constexpr auto OnHolstered = 0x650c50;
		constexpr auto OnViewmodelEvent = 0x2b1f00;
		constexpr auto OnReliableEvent = 0x2b1f00;
		constexpr auto ModifyCamera = 0x2b1f00;
		constexpr auto ShouldDestroyImmediately = 0x2c9390;
		constexpr auto UpdatePlayerModel = 0x651fe0;
		constexpr auto ProcessPlayerModel = 0x2b1f00;
		constexpr auto GetHoldAnimations = 0x650580;
		constexpr auto GetMovementMultiplier = 0x2cc4c0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2b1f00;
		constexpr auto get_hostile = 0x652190;
		constexpr auto LightsOn = 0x490120;
		constexpr auto IsDeployed = 0x48daf0;
		constexpr auto GetOwnerPlayer = 0x650790;
		constexpr auto GetOwnerConnection = 0x6505a0;
		constexpr auto CanBeUsedInWater = 0x2c7b60;
		constexpr auto GetOwnerItem = 0x6506b0;
		constexpr auto GetItem = 0x650590;
		constexpr auto GetOwnerItemDefinition = 0x650630;
		constexpr auto Load = 0x650850;
		constexpr auto ctor = 0x6520a0;
		constexpr auto cctor = 0x652060;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x1300eb0;
		constexpr auto set_text = 0x39ba90;
		constexpr auto set_image = 0x3a0d00;
		constexpr auto get_tooltip = 0x149b0c0;
		constexpr auto set_tooltip = 0x2cde20;
		constexpr auto ctor = 0x149b050;
		constexpr auto Temp = 0x14D1A90;
		constexpr auto ClearStaticCache = 0x149a850;
		constexpr auto cctor = 0x149aba0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x148;
		constexpr auto skeletonProperties = 0x1a0;
		constexpr auto baseProtection = 0x1a8;
		constexpr auto startHealth = 0x1b0;
		constexpr auto pickup = 0x1b8;
		constexpr auto repair = 0x1d8;
		constexpr auto ShowHealthInfo = 0x1e8;
		constexpr auto lifestate = 0x1ec;
		constexpr auto sendsHitNotification = 0x1f0;
		constexpr auto sendsMeleeHitNotification = 0x1f1;
		constexpr auto markAttackerHostile = 0x1f2;
		constexpr auto _health = 0x1f4;
		constexpr auto _maxHealth = 0x1f8;
		constexpr auto deathTime = 0x1fc;
		constexpr auto lastNotifyFrame = 0x200;

		constexpr auto GetMenuOptions = 0x351e20;
		constexpr auto get_HasMenuOptions = 0x352e30;
		constexpr auto OnRpcMessage = 0x352490;
		constexpr auto HitNotify = 0x352130;
		constexpr auto ClientInit = 0x3518c0;
		constexpr auto DisplayHealthInfo = 0x2f4910;
		constexpr auto GetEyeTransform = 0x351d10;
		constexpr auto OnLifeStateChanged = 0x352460;
		constexpr auto GetPickupCount = 0x352110;
		constexpr auto CanPickup = 0x351820;
		constexpr auto OnPickedUp = 0x2b1f00;
		constexpr auto Menu_Pickup = 0x352330;
		constexpr auto Menu_Pickup_If = 0x352310;
		constexpr auto BuildCost = 0x351750;
		constexpr auto IsDead = 0x352250;
		constexpr auto IsAlive = 0x352240;
		constexpr auto get_SecondsSinceDeath = 0x352ef0;
		constexpr auto get_healthFraction = 0x352f10;
		constexpr auto set_healthFraction = 0x352f60;
		constexpr auto ResetState = 0x352a40;
		constexpr auto DestroyShared = 0x3519a0;
		constexpr auto GetThreatLevel = 0x2cc2c0;
		constexpr auto PenetrationResistance = 0x3529b0;
		constexpr auto ScaleDamage = 0x352ab0;
		constexpr auto SkeletonLookup = 0x352bf0;
		constexpr auto Load = 0x352260;
		constexpr auto get_health = 0x352120;
		constexpr auto set_health = 0x353010;
		constexpr auto Health = 0x352120;
		constexpr auto MaxHealth = 0x352300;
		constexpr auto StartHealth = 0x352ca0;
		constexpr auto StartMaxHealth = 0x352cb0;
		constexpr auto SetMaxHealth = 0x352b60;
		constexpr auto DoHitNotify = 0x3519c0;
		constexpr auto OnAttacked = 0x352370;
		constexpr auto ctor = 0x352cd0;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x5f84a0;
		constexpr auto WasDown = 0x5f84e0;
		constexpr auto WasJustPressed = 0x5f8500;
		constexpr auto WasJustReleased = 0x5f8540;
		constexpr auto SwallowButton = 0x5f84d0;
		constexpr auto AimAngle = 0x5f82e0;
		constexpr auto Flip = 0x5f83d0;
		constexpr auto Clear = 0x5f83a0;
		constexpr auto ctor = 0x5f8580;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x176f430;
		constexpr auto Dispose = 0x176f130;
		constexpr auto EnterPool = 0x1289510;
		constexpr auto LeavePool = 0x1289540;
		constexpr auto CopyTo = 0x176e190;
		constexpr auto Copy = 0x176e1d0;
		constexpr auto Deserialize = 0x176e860;
		constexpr auto DeserializeLengthDelimited = 0x176e4f0;
		constexpr auto DeserializeLength = 0x176e570;
		constexpr auto FromProto = 0x176f1b0;
		constexpr auto WriteToStream = 0x176fd00;
		constexpr auto WriteToStreamDelta = 0x176fd20;
		constexpr auto ReadFromStream = 0x176f370;
		constexpr auto SerializeDelta = 0x176f4d0;
		constexpr auto Serialize = 0x176fa90;
		constexpr auto ToProtoBytes = 0x176fcf0;
		constexpr auto ToProto = 0x176fd00;
		constexpr auto SerializeToBytes = 0x176f980;
		constexpr auto SerializeLengthDelimited = 0x176f8d0;
		constexpr auto ctor = 0xb1e9a0;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x208;
		constexpr auto _mounted = 0x260;
		constexpr auto eyeOverride = 0x268;
		constexpr auto pitchClamp = 0x270;
		constexpr auto yawClamp = 0x278;
		constexpr auto canWieldItems = 0x280;
		constexpr auto relativeViewAngles = 0x281;
		constexpr auto mountPose = 0x284;
		constexpr auto maxMountDistance = 0x288;
		constexpr auto mountAnchor = 0x290;
		constexpr auto dismountAnchor = 0x298;
		constexpr auto dismountPositions = 0x2a0;
		constexpr auto dismountCheckEyes = 0x2a8;
		constexpr auto checkPlayerLosOnMount = 0x2b0;
		constexpr auto mountSoundDef = 0x2b8;
		constexpr auto dismountSoundDef = 0x2c0;
		constexpr auto mountTimeStatType = 0x2c8;
		constexpr auto MountedCameraMode = 0x2cc;
		constexpr auto isMobile = 0x2d0;
		constexpr auto SideLeanAmount = 0x2d4;

		constexpr auto GetMenuOptions = 0x2cbf30;
		constexpr auto get_HasMenuOptions = 0x2cd9d0;
		constexpr auto OnRpcMessage = 0x2cc9e0;
		constexpr auto CanHoldItems = 0x2cb970;
		constexpr auto GetMountedCameraMode = 0x2cc320;
		constexpr auto DirectlyMountable = 0x2c9390;
		constexpr auto GetEyeOverride = 0x2cbea0;
		constexpr auto GetMountedBodyAngles = 0x2cc2d0;
		constexpr auto ModifiesThirdPersonCamera = 0x2c7b60;
		constexpr auto GetPitchClamp = 0x2cc4a0;
		constexpr auto GetYawClamp = 0x2cc4d0;
		constexpr auto EyePositionForPlayer = 0x2cbb20;
		constexpr auto WaterFactorForPlayer = 0x2cd8a0;
		constexpr auto MaxVelocity = 0x2cc4f0;
		constexpr auto GetMounted = 0x2cc490;
		constexpr auto OnClientInput = 0x2b1f00;
		constexpr auto UpdatePlayerModel = 0x2cd340;
		constexpr auto ProcessPlayerModel = 0x2b1f00;
		constexpr auto SuppressHandsAnimationLayer = 0x2c7b60;
		constexpr auto GetAnimationOverride = 0x2cbe90;
		constexpr auto GetSpineLookAtWeight = 0x2cc4c0;
		constexpr auto GetMountedAnimationSpeed = 0x2cc2c0;
		constexpr auto VehicleParent = 0x2cd810;
		constexpr auto UpdatePlayerRotation = 0x2cd760;
		constexpr auto SetNetworkPosition = 0x2cd310;
		constexpr auto UpdatePlayerPosition = 0x2cd640;
		constexpr auto GetMountedRotation = 0x2cc380;
		constexpr auto GetMountedPosition = 0x2cc330;
		constexpr auto PlayerMounted = 0x2ccf70;
		constexpr auto PlayerDismounted = 0x2ccb00;
		constexpr auto ClientOnPlayerDismounted = 0x2b1f00;
		constexpr auto ClientOnPlayerMounted = 0x2b1f00;
		constexpr auto OverrideViewAngles = 0x2ccad0;
		constexpr auto DoPlayerMovement = 0x2cba50;
		constexpr auto Menu_Mount = 0x2cc640;
		constexpr auto Menu_Mount_ShowIf = 0x2cc5a0;
		constexpr auto MountMenuVisible = 0x2c9390;
		constexpr auto NearMountPoint = 0x2cc680;
		constexpr auto ConvertVector = 0x2cb980;
		constexpr auto ctor = 0x2cd930;
	};

	namespace TOD_Sky {
		constexpr auto probeRenderID = 0x18;
		constexpr auto ColorSpace = 0x1c;
		constexpr auto ColorRange = 0x20;
		constexpr auto ColorOutput = 0x24;
		constexpr auto SkyQuality = 0x28;
		constexpr auto CloudQuality = 0x2c;
		constexpr auto MeshQuality = 0x30;
		constexpr auto StarQuality = 0x34;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto Probek__BackingField = 0x218;
		constexpr auto ProbeInstancek__BackingField = 0x220;
		constexpr auto ProbeExk__BackingField = 0x228;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0xc97040;
		constexpr auto get_Instance = 0xc96f70;
		constexpr auto get_Initialized = 0x830740;
		constexpr auto set_Initialized = 0x830750;
		constexpr auto get_Headless = 0xc96f50;
		constexpr auto get_Components = 0x6e9e10;
		constexpr auto set_Components = 0x7afa10;
		constexpr auto get_Resources = 0x6e9e20;
		constexpr auto set_Resources = 0xb819d0;
		constexpr auto get_IsDay = 0xc970a0;
		constexpr auto set_IsDay = 0xc97450;
		constexpr auto get_IsNight = 0xc970b0;
		constexpr auto set_IsNight = 0xc97460;
		constexpr auto get_Radius = 0xc97330;
		constexpr auto get_Diameter = 0xc96ef0;
		constexpr auto get_LerpValue = 0x37ec90;
		constexpr auto set_LerpValue = 0x37ee90;
		constexpr auto get_SunZenith = 0xc973f0;
		constexpr auto set_SunZenith = 0xc97680;
		constexpr auto get_SunAltitude = 0xc97370;
		constexpr auto set_SunAltitude = 0xc975e0;
		constexpr auto get_SunAzimuth = 0xc97380;
		constexpr auto set_SunAzimuth = 0xc975f0;
		constexpr auto get_MoonZenith = 0xc97300;
		constexpr auto set_MoonZenith = 0xc975b0;
		constexpr auto get_MoonAltitude = 0xc97250;
		constexpr auto set_MoonAltitude = 0xc97500;
		constexpr auto get_MoonAzimuth = 0xc97260;
		constexpr auto set_MoonAzimuth = 0xc97510;
		constexpr auto get_SunsetTime = 0xc97410;
		constexpr auto set_SunsetTime = 0xc976a0;
		constexpr auto get_SunriseTime = 0xc97400;
		constexpr auto set_SunriseTime = 0xc97690;
		constexpr auto get_LocalSiderealTime = 0xc97220;
		constexpr auto set_LocalSiderealTime = 0xc974d0;
		constexpr auto get_LightZenith = 0xc97160;
		constexpr auto get_LightIntensity = 0xc97130;
		constexpr auto get_SunVisibility = 0xc973e0;
		constexpr auto set_SunVisibility = 0xc97670;
		constexpr auto get_MoonVisibility = 0xc972f0;
		constexpr auto set_MoonVisibility = 0xc975a0;
		constexpr auto get_SunDirection = 0xc97390;
		constexpr auto set_SunDirection = 0xc97610;
		constexpr auto get_MoonDirection = 0xc97280;
		constexpr auto set_MoonDirection = 0xc97530;
		constexpr auto get_LightDirection = 0xc97110;
		constexpr auto set_LightDirection = 0xc97470;
		constexpr auto get_LocalSunDirection = 0xc97230;
		constexpr auto set_LocalSunDirection = 0xc974e0;
		constexpr auto get_LocalMoonDirection = 0xc97200;
		constexpr auto set_LocalMoonDirection = 0xc974b0;
		constexpr auto get_LocalLightDirection = 0xc971e0;
		constexpr auto set_LocalLightDirection = 0xc97490;
		constexpr auto get_SunLightColor = 0xc973b0;
		constexpr auto set_SunLightColor = 0xc97630;
		constexpr auto get_MoonLightColor = 0xc972b0;
		constexpr auto set_MoonLightColor = 0xc97560;
		constexpr auto get_LightColor = 0xc970c0;
		constexpr auto get_SunRayColor = 0xc973d0;
		constexpr auto set_SunRayColor = 0xc97650;
		constexpr auto get_MoonRayColor = 0xc972d0;
		constexpr auto set_MoonRayColor = 0xc97580;
		constexpr auto get_SunSkyColor = 0xa036a0;
		constexpr auto set_SunSkyColor = 0xc97660;
		constexpr auto get_MoonSkyColor = 0xc972e0;
		constexpr auto set_MoonSkyColor = 0xc97590;
		constexpr auto get_SunMeshColor = 0xc973c0;
		constexpr auto set_SunMeshColor = 0xc97640;
		constexpr auto get_MoonMeshColor = 0xc972c0;
		constexpr auto set_MoonMeshColor = 0xc97570;
		constexpr auto get_SunCloudColor = 0x7bf110;
		constexpr auto set_SunCloudColor = 0xc97600;
		constexpr auto get_MoonCloudColor = 0xc97270;
		constexpr auto set_MoonCloudColor = 0xc97520;
		constexpr auto get_FogColor = 0xc96f30;
		constexpr auto set_FogColor = 0xc97430;
		constexpr auto get_GroundColor = 0xc96f40;
		constexpr auto set_GroundColor = 0xc97440;
		constexpr auto get_AmbientColor = 0xc96ee0;
		constexpr auto set_AmbientColor = 0xc97420;
		constexpr auto get_MoonHaloColor = 0xc972a0;
		constexpr auto set_MoonHaloColor = 0xc97550;
		constexpr auto get_Probe = 0xc97320;
		constexpr auto set_Probe = 0xc975d0;
		constexpr auto get_ProbeInstance = 0x363680;
		constexpr auto set_ProbeInstance = 0x7611d0;
		constexpr auto get_ProbeEx = 0xc97310;
		constexpr auto set_ProbeEx = 0xc975c0;
		constexpr auto OrbitalToUnity = 0xc8fc50;
		constexpr auto OrbitalToLocal = 0xc8fb90;
		constexpr auto SampleAtmosphere = 0xc90ce0;
		constexpr auto RenderToSphericalHarmonics = 0xc90b80;
		constexpr auto RenderToCubemap = 0xc8fd20;
		constexpr auto RenderToProbe = 0xc8fee0;
		constexpr auto UpdateProbeProperties = 0xc94d40;
		constexpr auto SampleFogColor = 0xc91060;
		constexpr auto SampleSkyColor = 0xc91310;
		constexpr auto SampleEquatorColor = 0xc90fa0;
		constexpr auto UpdateFog = 0xc94cc0;
		constexpr auto UpdateAmbient = 0xc92920;
		constexpr auto UpdateReflection = 0xc95850;
		constexpr auto LoadParameters = 0xc8f810;
		constexpr auto SaveParameters = 0xc91420;
		constexpr auto UpdateQualitySettings = 0xc95240;
		constexpr auto UpdateRenderSettings = 0xc95950;
		constexpr auto UpdateShaderKeywords = 0xc95d00;
		constexpr auto UpdateShaderProperties = 0xc95f60;
		constexpr auto ShaderScale = 0xc91a80;
		constexpr auto ShaderMiePhase = 0xc91760;
		constexpr auto ShaderRayleighPhase = 0xc91a60;
		constexpr auto ShaderNightSkyColor = 0xc91970;
		constexpr auto ShaderMoonHaloColor = 0xc91830;
		constexpr auto TOD_HDR2LDR = 0xc926d0;
		constexpr auto TOD_GAMMA2LINEAR = 0xc92670;
		constexpr auto TOD_LINEAR2GAMMA = 0xc92850;
		constexpr auto ShaderScatteringColor = 0xc91b30;
		constexpr auto Initialize = 0xc8f430;
		constexpr auto Cleanup = 0xc8f2c0;
		constexpr auto OnEnable = 0xc8fb40;
		constexpr auto OnDisable = 0xc8f2c0;
		constexpr auto LateUpdate = 0xc8f530;
		constexpr auto OnValidate = 0xc8fb50;
		constexpr auto UpdateScattering = 0xc95b50;
		constexpr auto UpdateCelestials = 0xc92dc0;
		constexpr auto ctor = 0xc96e90;
		constexpr auto cctor = 0xc96e30;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x1316160;
		constexpr auto get_state = 0x1316430;
		constexpr auto set_state = 0x13164e0;
		constexpr auto Range = 0x13161e0;
		constexpr auto RandomRangeInt = 0x13161a0;
		constexpr auto get_value = 0x1316470;
		constexpr auto get_insideUnitSphere = 0x13162b0;
		constexpr auto GetRandomUnitCircle = 0x1316120;
		constexpr auto get_insideUnitCircle = 0x1316230;
		constexpr auto get_onUnitSphere = 0x1316330;
		constexpr auto get_rotation = 0x13163b0;
		constexpr auto RandomRange = 0x13161a0;
		constexpr auto get_state_Injected = 0x13163f0;
		constexpr auto set_state_Injected = 0x13164a0;
		constexpr auto get_insideUnitSphere_Injected = 0x1316270;
		constexpr auto get_onUnitSphere_Injected = 0x13162f0;
		constexpr auto get_rotation_Injected = 0x1316370;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x1adfe0;
		constexpr auto GetHashCode = 0xff980;
		constexpr auto Equals = 0x1adaa0;
		constexpr auto Raycast = 0x1add70;
		constexpr auto Internal_RaycastTest = 0x1ab23f0;
		constexpr auto Internal_Raycast = 0x1ab24d0;
		constexpr auto Internal_RaycastNonAlloc = 0x1ab2310;
		constexpr auto Query_CapsuleCast = 0x1ab2af0;
		constexpr auto Internal_CapsuleCast = 0x1ab20f0;
		constexpr auto CapsuleCast = 0x1ad9f0;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x1ab2920;
		constexpr auto OverlapCapsule = 0x1adbd0;
		constexpr auto Query_SphereCast = 0x1ab2c00;
		constexpr auto Internal_SphereCast = 0x1ab2640;
		constexpr auto SphereCast = 0x1ade60;
		constexpr auto Internal_SphereCastNonAlloc = 0x1ab25b0;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x1ab2a10;
		constexpr auto OverlapSphere = 0x1adc70;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x1ab2830;
		constexpr auto OverlapBox = 0x1adb20;
		constexpr auto Internal_RaycastTest_Injected = 0x1ab2380;
		constexpr auto Internal_Raycast_Injected = 0x1ab2460;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x1ab22a0;
		constexpr auto Query_CapsuleCast_Injected = 0x1ab2a80;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x1ab28b0;
		constexpr auto Query_SphereCast_Injected = 0x1ab2b90;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x1ab2540;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x1ab29a0;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x1ab27c0;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0xf2b3b0;
		constexpr auto IsOnLayer = 0xf2b260;
		constexpr auto GetEntityFromRegistry = 0xf2b130;
		constexpr auto GetEntityFromComponent = 0xf2b030;
		constexpr auto SetHierarchyGroup = 0xf2b2f0;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x208;
		constexpr auto rotorPivot = 0x210;
		constexpr auto mainRotor = 0x218;
		constexpr auto mainRotor_blades = 0x220;
		constexpr auto mainRotor_blur = 0x228;
		constexpr auto tailRotor = 0x230;
		constexpr auto tailRotor_blades = 0x238;
		constexpr auto tailRotor_blur = 0x240;
		constexpr auto rocket_tube_left = 0x248;
		constexpr auto rocket_tube_right = 0x250;
		constexpr auto left_gun_yaw = 0x258;
		constexpr auto left_gun_pitch = 0x260;
		constexpr auto left_gun_muzzle = 0x268;
		constexpr auto right_gun_yaw = 0x270;
		constexpr auto right_gun_pitch = 0x278;
		constexpr auto right_gun_muzzle = 0x280;
		constexpr auto spotlight_rotation = 0x288;
		constexpr auto rocket_fire_effect = 0x290;
		constexpr auto gun_fire_effect = 0x298;
		constexpr auto bulletEffect = 0x2a0;
		constexpr auto explosionEffect = 0x2a8;
		constexpr auto fireBall = 0x2b0;
		constexpr auto crateToDrop = 0x2b8;
		constexpr auto maxCratesToSpawn = 0x2c0;
		constexpr auto bulletSpeed = 0x2c4;
		constexpr auto bulletDamage = 0x2c8;
		constexpr auto servergibs = 0x2d0;
		constexpr auto debrisFieldMarker = 0x2d8;
		constexpr auto rotorWashSoundDef = 0x2e0;
		constexpr auto _rotorWashSound = 0x2e8;
		constexpr auto flightEngineSoundDef = 0x2f0;
		constexpr auto flightThwopsSoundDef = 0x2f8;
		constexpr auto flightEngineSound = 0x300;
		constexpr auto flightThwopsSound = 0x308;
		constexpr auto flightEngineGainMod = 0x310;
		constexpr auto flightThwopsGainMod = 0x318;
		constexpr auto rotorGainModSmoothing = 0x320;
		constexpr auto engineGainMin = 0x324;
		constexpr auto engineGainMax = 0x328;
		constexpr auto thwopGainMin = 0x32c;
		constexpr auto thwopGainMax = 0x330;
		constexpr auto spotlightJitterAmount = 0x334;
		constexpr auto spotlightJitterSpeed = 0x338;
		constexpr auto nightLights = 0x340;
		constexpr auto spotlightTarget = 0x348;
		constexpr auto engineSpeed = 0x354;
		constexpr auto targetEngineSpeed = 0x358;
		constexpr auto blur_rotationScale = 0x35c;
		constexpr auto _rotorWashParticles = 0x360;
		constexpr auto myAI = 0x368;
		constexpr auto client_rotorPivotIdeal = 0x370;
		constexpr auto nightLightsOn = 0x380;

		constexpr auto OnRpcMessage = 0x2c6340;
		constexpr auto InitalizeWeakspots = 0x2c5d90;
		constexpr auto MaxVelocity = 0x2c6330;
		constexpr auto InitShared = 0x2c5d00;
		constexpr auto Load = 0x2c6070;
		constexpr auto ClientInit = 0x2c5720;
		constexpr auto InitializeClientsideEffects = 0x2c5e10;
		constexpr auto DoClientDestroy = 0x2c5740;
		constexpr auto SetLights = 0x2c6790;
		constexpr auto Update = 0x2c7220;
		constexpr auto UpdateEffects = 0x2c68b0;
		constexpr auto UpdateRotorWashPosition = 0x2c70e0;
		constexpr auto ToggleRotorWash = 0x2c6830;
		constexpr auto UpdateRotorVisibility = 0x2c7050;
		constexpr auto FireGun = 0x2c5820;
		constexpr auto ctor = 0x2c7980;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileDistance = 0xa0;
		constexpr auto ProjectileVelocity = 0xa4;
		constexpr auto ProjectilePrefab = 0xb0;
		constexpr auto material = 0xb8;
		constexpr auto damageProperties = 0xc0;
		constexpr auto damageTypes = 0xc8;
		constexpr auto CanGather = 0xd0;
		constexpr auto DidGather = 0xd1;
		constexpr auto gatherScale = 0xd4;

		constexpr auto IsProjectile = 0x654760;
		constexpr auto get_InitiatorPlayer = 0x654fb0;
		constexpr auto get_attackNormal = 0x655040;
		constexpr auto get_hasDamage = 0x655540;
		constexpr auto ctor = 0x654dd0;
		constexpr auto LoadFromAttack = 0x654770;
		constexpr auto get_isHeadshot = 0x655570;
		constexpr auto get_bonePhrase = 0x6553e0;
		constexpr auto get_boneName = 0x655250;
		constexpr auto get_boneArea = 0x655140;
		constexpr auto PositionOnRay = 0x654970;
		constexpr auto HitPositionOnRay = 0x6545c0;
		constexpr auto IsNaNOrInfinity = 0x654610;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0xf1b7a0;
		constexpr auto NumberBufferToDouble = 0xf1b7b0;
		constexpr auto FormatDecimal = 0xf1acc0;
		constexpr auto FormatDouble = 0xf1ade0;
		constexpr auto FormatInt32 = 0xf1ae60;
		constexpr auto FormatUInt32 = 0xf1b1c0;
		constexpr auto FormatInt64 = 0xf1afd0;
		constexpr auto FormatUInt64 = 0xf1b320;
		constexpr auto FormatSingle = 0xf1b140;
		constexpr auto HexNumberToInt32 = 0xf1b480;
		constexpr auto HexNumberToInt64 = 0xf1b500;
		constexpr auto HexNumberToUInt32 = 0xf1b5c0;
		constexpr auto HexNumberToUInt64 = 0xf1b640;
		constexpr auto IsWhite = 0xf1b6d0;
		constexpr auto NumberToInt32 = 0xf1b7c0;
		constexpr auto NumberToInt64 = 0xf1b820;
		constexpr auto NumberToUInt32 = 0xf1b8a0;
		constexpr auto NumberToUInt64 = 0xf1b900;
		constexpr auto MatchChars = 0xf1b730;
		constexpr auto ParseDecimal = 0xf1b970;
		constexpr auto ParseDouble = 0xf1bae0;
		constexpr auto ParseInt32 = 0xf1bd90;
		constexpr auto ParseInt64 = 0xf1bfe0;
		constexpr auto ParseNumber = 0xf1c250;
		constexpr auto ParseSingle = 0xf1cd40;
		constexpr auto ParseUInt32 = 0xf1d060;
		constexpr auto ParseUInt64 = 0xf1d2a0;
		constexpr auto StringToNumber = 0xf1d500;
		constexpr auto TrailingZeros = 0xf1d640;
		constexpr auto TryParseDecimal = 0xf1d6a0;
		constexpr auto TryParseDouble = 0xf1d820;
		constexpr auto TryParseInt32 = 0xf1d9a0;
		constexpr auto TryParseInt64 = 0xf1dbe0;
		constexpr auto TryParseSingle = 0xf1ddb0;
		constexpr auto TryParseUInt32 = 0xf1df60;
		constexpr auto TryParseUInt64 = 0xf1e1a0;
		constexpr auto TryStringToNumber = 0xf1e4c0;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0xd2b440;
		constexpr auto OnSerializing = 0xd2aaa0;
		constexpr auto OnDeserializing = 0x2b1f00;
		constexpr auto OnDeserialized = 0x2b1f00;
		constexpr auto get_InvariantInfo = 0xd2b5d0;
		constexpr auto GetInstance = 0xd2a820;
		constexpr auto Clone = 0xd2a720;
		constexpr auto get_CurrencyDecimalDigits = 0xc8e470;
		constexpr auto get_CurrencyDecimalSeparator = 0x3adac0;
		constexpr auto get_IsReadOnly = 0x914420;
		constexpr auto get_CurrencyGroupSizes = 0xd2b450;
		constexpr auto get_NumberGroupSizes = 0xd2b6e0;
		constexpr auto get_PercentGroupSizes = 0xd2b760;
		constexpr auto get_CurrencyGroupSeparator = 0x37ed80;
		constexpr auto get_CurrencySymbol = 0x3adab0;
		constexpr auto get_CurrentInfo = 0xd2b4d0;
		constexpr auto get_NaNSymbol = 0x484650;
		constexpr auto get_CurrencyNegativePattern = 0xc8e460;
		constexpr auto get_NumberNegativePattern = 0xc8e450;
		constexpr auto get_PercentPositivePattern = 0xc8e440;
		constexpr auto get_PercentNegativePattern = 0x7dbe10;
		constexpr auto get_NegativeInfinitySymbol = 0x3a7780;
		constexpr auto get_NegativeSign = 0x4b67e0;
		constexpr auto get_NumberDecimalDigits = 0xaa8760;
		constexpr auto get_NumberDecimalSeparator = 0x37ecd0;
		constexpr auto get_NumberGroupSeparator = 0x37ed70;
		constexpr auto get_CurrencyPositivePattern = 0xc8e430;
		constexpr auto get_PositiveInfinitySymbol = 0x36e3c0;
		constexpr auto get_PositiveSign = 0x3803a0;
		constexpr auto get_PercentDecimalDigits = 0x7603e0;
		constexpr auto get_PercentDecimalSeparator = 0x33d710;
		constexpr auto get_PercentGroupSeparator = 0x32eb10;
		constexpr auto get_PercentSymbol = 0x6770a0;
		constexpr auto get_PerMilleSymbol = 0x4bd960;
		constexpr auto GetFormat = 0xd2a790;
		constexpr auto ReadOnly = 0xd2ab30;
		constexpr auto ValidateParseStyleInteger = 0xd2acb0;
		constexpr auto ValidateParseStyleFloatingPoint = 0xd2abe0;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x13dd9f0;
		constexpr auto Vertex = 0x13dda50;
		constexpr auto TexCoord3 = 0x13dd990;
		constexpr auto TexCoord2 = 0x13dd940;
		constexpr auto MultiTexCoord3 = 0x13dd870;
		constexpr auto MultiTexCoord2 = 0x13dd810;
		constexpr auto ImmediateColor = 0x13dd550;
		constexpr auto Color = 0x13dd250;
		constexpr auto get_sRGBWrite = 0x13ddab0;
		constexpr auto set_sRGBWrite = 0x13ddae0;
		constexpr auto MultMatrix = 0x13dd7d0;
		constexpr auto PushMatrix = 0x13dd910;
		constexpr auto PopMatrix = 0x13dd8e0;
		constexpr auto LoadIdentity = 0x13dd680;
		constexpr auto LoadOrtho = 0x13dd6b0;
		constexpr auto LoadPixelMatrix = 0x13dd6e0;
		constexpr auto LoadProjectionMatrix = 0x13dd750;
		constexpr auto GetGPUProjectionMatrix = 0x13dd4e0;
		constexpr auto GLLoadPixelMatrixScript = 0x13dd400;
		constexpr auto GLIssuePluginEvent = 0x13dd3c0;
		constexpr auto IssuePluginEvent = 0x13dd5d0;
		constexpr auto Begin = 0x13dd160;
		constexpr auto End = 0x13dd2b0;
		constexpr auto GLClear = 0x13dd350;
		constexpr auto Clear = 0x13dd1f0;
		constexpr auto ClearWithSkybox = 0x13dd1a0;
		constexpr auto MultMatrix_Injected = 0x13dd790;
		constexpr auto LoadProjectionMatrix_Injected = 0x13dd710;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x13dd480;
		constexpr auto GLClear_Injected = 0x13dd2e0;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1303900;
		constexpr auto CreateWithMaterial = 0x13038b0;
		constexpr auto CreateWithString = 0x1303950;
		constexpr auto ctor = 0x1304e70;
		constexpr auto get_shader = 0x13050d0;
		constexpr auto get_color = 0x1304f00;
		constexpr auto set_color = 0x1305110;
		constexpr auto get_mainTexture = 0x1304fe0;
		constexpr auto HasProperty = 0x13040f0;
		constexpr auto get_renderQueue = 0x1305090;
		constexpr auto set_renderQueue = 0x13051e0;
		constexpr auto EnableKeyword = 0x13039e0;
		constexpr auto DisableKeyword = 0x1303990;
		constexpr auto IsKeywordEnabled = 0x1304130;
		constexpr auto get_enableInstancing = 0x1304fa0;
		constexpr auto set_enableInstancing = 0x1305190;
		constexpr auto get_passCount = 0x1305050;
		constexpr auto GetShaderPassEnabled = 0x1303d30;
		constexpr auto GetPassName = 0x1303cb0;
		constexpr auto FindPass = 0x1303a30;
		constexpr auto SetOverrideTag = 0x13048c0;
		constexpr auto GetTagImpl = 0x1303d80;
		constexpr auto GetTag = 0x1303e80;
		constexpr auto SetPass = 0x1304920;
		constexpr auto CopyPropertiesFromMaterial = 0x1303860;
		constexpr auto GetShaderKeywords = 0x1303cf0;
		constexpr auto SetShaderKeywords = 0x1304960;
		constexpr auto get_shaderKeywords = 0x1303cf0;
		constexpr auto set_shaderKeywords = 0x1304960;
		constexpr auto SetFloatImpl = 0x1304610;
		constexpr auto SetColorImpl = 0x1304280;
		constexpr auto SetMatrixImpl = 0x1304780;
		constexpr auto SetTextureImpl = 0x13049b0;
		constexpr auto SetBufferImpl = 0x1304180;
		constexpr auto GetFloatImpl = 0x1303c20;
		constexpr auto GetColorImpl = 0x1303ad0;
		constexpr auto GetTextureImpl = 0x1303ef0;
		constexpr auto SetFloatArrayImpl = 0x1304380;
		constexpr auto SetTextureOffsetImpl = 0x1304a50;
		constexpr auto SetTextureScaleImpl = 0x1304b50;
		constexpr auto SetFloatArray = 0x13044e0;
		constexpr auto SetFloat = 0x1304660;
		constexpr auto SetInt = 0x13046c0;
		constexpr auto SetColor = 0x1304320;
		constexpr auto SetVector = 0x1304c60;
		constexpr auto SetMatrix = 0x1304840;
		constexpr auto SetTexture = 0x1304c00;
		constexpr auto SetBuffer = 0x13041d0;
		constexpr auto GetFloat = 0x1303c60;
		constexpr auto GetColor = 0x1303ba0;
		constexpr auto GetVector = 0x1303f80;
		constexpr auto GetTexture = 0x1303f30;
		constexpr auto SetTextureOffset = 0x1304aa0;
		constexpr auto SetTextureScale = 0x1304ba0;
		constexpr auto SetColorImpl_Injected = 0x1304230;
		constexpr auto SetMatrixImpl_Injected = 0x1304730;
		constexpr auto GetColorImpl_Injected = 0x1303a80;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1304a00;
		constexpr auto SetTextureScaleImpl_Injected = 0x1304b00;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x144f530;
		constexpr auto get_height = 0x144f4d0;
		constexpr auto get_dpi = 0x144f470;
		constexpr auto get_currentResolution = 0x144f430;
		constexpr auto get_fullScreen = 0x144f4a0;
		constexpr auto SetResolution = 0x144f330;
		constexpr auto get_resolutions = 0x144f500;
		constexpr auto get_currentResolution_Injected = 0x144f3f0;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0xc88ec0;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0xc8cc60;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0xc8a350;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;
		constexpr auto ctor = 0xc8cca0;
	};

}

namespace S {
	constexpr auto Get = 0x7E99C0;
	constexpr auto get_resourcePath = 0x1128650;
	constexpr auto Add = 0x18D8FD0;
	constexpr auto Label = 0x14DDEE0;
	constexpr auto HitTest = 0x2885C18;
	constexpr auto ComponentGetComponentItemModProjectile = 0x2866508;
	constexpr auto PoolGetProjectileShoot = 0x286A658;
	constexpr auto List1ProjectileShootProjectile = 0x2885D20;
	constexpr auto ProjectileShootProjectile = 0x285AB08;
	constexpr auto GetComponent = 0x970EB0;
	constexpr auto BaseEntityServerRPCProjectileShoot = 0x289DF70;
	constexpr auto PoolGetListTraceInfo = 0x2875610;
	//constexpr auto PoolGetPlayerProjectileUpdate = 0x283F8D0;
	constexpr auto BasePlayer = 0x2886590;
	constexpr auto ServerRPC = 0x032EEA0;
}